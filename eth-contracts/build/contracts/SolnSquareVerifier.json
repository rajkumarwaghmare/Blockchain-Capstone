{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "mode",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "verifierAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "key",
          "type": "bytes32"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "whoPaused",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "whoUnpaused",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnerShipTrasnferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "key",
          "type": "bytes32"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "c",
              "type": "tuple"
            }
          ],
          "name": "proof",
          "type": "tuple"
        },
        {
          "name": "inputs",
          "type": "uint256[1]"
        }
      ],
      "name": "mintToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "name": "inputs",
          "type": "uint256[1]"
        }
      ],
      "name": "generateKey",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"mode\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"name\":\"c\",\"type\":\"tuple\"}],\"name\":\"proof\",\"type\":\"tuple\"},{\"name\":\"inputs\",\"type\":\"uint256[1]\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256[2]\"},{\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"name\":\"c\",\"type\":\"uint256[2]\"},{\"name\":\"inputs\",\"type\":\"uint256[1]\"}],\"name\":\"generateKey\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"verifierAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"whoPaused\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"whoUnpaused\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnerShipTrasnferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{\"setPaused(bool)\":{\"notice\":\"Let owner set the paused mode.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/waghmarerajkumar/projects/udacity-bc-nanodegree/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/waghmarerajkumar/projects/udacity-bc-nanodegree/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x4713813541d69d7893ffe834d9e011aed5967786469dfbda7a1dc5b90cf5ad10\",\"urls\":[\"bzzr://6d0de2f7c6f30f0b21db7b6e90158768cebf688e5ec2d7e3ea04d514f08b5a45\"]},\"/Users/waghmarerajkumar/projects/udacity-bc-nanodegree/Blockchain-Capstone/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzzr://f48ebdff8df1cabbd7749c5eb818a6c54a6ba92956a850736bdcfbc9f53f9ffd\"]},\"/Users/waghmarerajkumar/projects/udacity-bc-nanodegree/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xfecab74a6235997a9bc8e263caefb0a2e7d570cbb106fb4b95330afecc551268\",\"urls\":[\"bzzr://a46f067dbfdb3073b7e01811ccbfcfb57ca1e26524793f0f2e6f735a94950a08\"]},\"/Users/waghmarerajkumar/projects/udacity-bc-nanodegree/Blockchain-Capstone/eth-contracts/contracts/SquareVerifier.sol\":{\"keccak256\":\"0xff3400184baf27945ca440465b2129bedf92eb0dd55bc0cacc19b19621b55fd3\",\"urls\":[\"bzzr://b6609d7f8ba2c21139afd889df1bca0953870b301ec7407f52e3a83749ec5f83\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzzr://8ab3b1e3d023aafb8a2d127de323b74567084e821b955b5f543e67fe964b1a6b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzzr://2f8b9c142d30b43eab7b77dbcc632a51987eeb62371777d765e9311c0b3c4c13\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzzr://4e1d23731da27602b8c552e54fb9976dadf8cf46a8f90a3c8c1b85fe044618b9\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060600160405280603f815260200162004175603f91396013908051906020019062000035929190620003c3565b503480156200004357600080fd5b50604051602080620041b4833981018060405262000065919081019062000488565b6040518060400160405280600481526020017f50544f4b000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f53594d0000000000000000000000000000000000000000000000000000000000815250818160138054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200016d5780601f1062000141576101008083540402835291602001916200016d565b820191906000526020600020905b8154815290600101906020018083116200014f57829003601f168201915b5050505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f3511b702d5ff40e5fdc0ca67119c0c54db468b05276089de85bb310f47308de560008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405162000207929190620004d6565b60405180910390a160008060146101000a81548160ff021916908315150217905550620002416301ffc9a760e01b6200032160201b60201c565b620002596380ac58cd60e01b6200032160201b60201c565b6200027163780e9d6360e01b6200032160201b60201c565b82600f908051906020019062000289929190620003c3565b508160109080519060200190620002a2929190620003c3565b508060119080519060200190620002bb929190620003c3565b50620002d4635b5e139f60e01b6200032160201b60201c565b505050505080601460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620005a7565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156200035757600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200040657805160ff191683800117855562000437565b8280016001018555821562000437579182015b828111156200043657825182559160200191906001019062000419565b5b5090506200044691906200044a565b5090565b6200046f91905b808211156200046b57600081600090555060010162000451565b5090565b90565b600062000480825162000537565b905092915050565b6000602082840312156200049b57600080fd5b6000620004ab8482850162000472565b91505092915050565b620004bf816200056b565b82525050565b620004d08162000503565b82525050565b6000604082019050620004ed6000830185620004b4565b620004fc6020830184620004c5565b9392505050565b6000620005108262000517565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000544826200054b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000578826200057f565b9050919050565b60006200058c8262000593565b9050919050565b6000620005a08262000517565b9050919050565b613bbe80620005b76000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80636352211e116100de578063a22cb46511610097578063c87b56dd11610071578063c87b56dd146104a3578063d547cfb7146104d3578063e985e9c5146104f1578063f2fde38b146105215761018e565b8063a22cb4651461044f578063b3b720071461046b578063b88d4fde146104875761018e565b80636352211e146103675780636e59236b1461039757806370a08231146103b35780638da5cb5b146103e357806395d89b41146104015780639bb640b51461041f5761018e565b806323b872dd1161014b57806338bbfa501161012557806338bbfa50146102cf57806340c10f19146102eb57806342842e0e1461031b5780634f6ccce7146103375761018e565b806323b872dd1461026757806327dc297e146102835780632f745c591461029f5761018e565b806301ffc9a71461019357806306fdde03146101c3578063081812fc146101e1578063095ea7b31461021157806316c38b3c1461022d57806318160ddd14610249575b600080fd5b6101ad60048036036101a89190810190612e5c565b61053d565b6040516101ba9190613647565b60405180910390f35b6101cb6105a5565b6040516101d8919061367d565b60405180910390f35b6101fb60048036036101f69190810190612eae565b610647565b604051610208919061359c565b60405180910390f35b61022b60048036036102269190810190612c31565b610684565b005b61024760048036036102429190810190612d37565b610868565b005b6102516109a6565b60405161025e91906137ca565b60405180910390f35b610281600480360361027c9190810190612b2b565b6109b3565b005b61029d60048036036102989190810190612d89565b6109d8565b005b6102b960048036036102b49190810190612c31565b610a1b565b6040516102c691906137ca565b60405180910390f35b6102e960048036036102e49190810190612ddd565b610a92565b005b61030560048036036103009190810190612c31565b610a97565b6040516103129190613647565b60405180910390f35b61033560048036036103309190810190612b2b565b610b47565b005b610351600480360361034c9190810190612eae565b610b67565b60405161035e91906137ca565b60405180910390f35b610381600480360361037c9190810190612eae565b610b9f565b60405161038e919061359c565b60405180910390f35b6103b160048036036103ac9190810190612c6d565b610bdc565b005b6103cd60048036036103c89190810190612ac6565b610d9e565b6040516103da91906137ca565b60405180910390f35b6103eb610dee565b6040516103f8919061359c565b60405180910390f35b610409610e17565b604051610416919061367d565b60405180910390f35b61043960048036036104349190810190612cd2565b610eb9565b6040516104469190613662565b60405180910390f35b61046960048036036104649190810190612bf5565b610ef2565b005b61048560048036036104809190810190612ed7565b61102a565b005b6104a1600480360361049c9190810190612b7a565b61118a565b005b6104bd60048036036104b89190810190612eae565b6111b2565b6040516104ca919061367d565b60405180910390f35b6104db61127b565b6040516104e8919061367d565b60405180910390f35b61050b60048036036105069190810190612aef565b61131d565b6040516105189190613647565b60405180910390f35b61053b60048036036105369190810190612ac6565b6113b1565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561063d5780601f106106125761010080835404028352916020019161063d565b820191906000526020600020905b81548152906001019060200180831161062057829003601f168201915b5050505050905090565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610728576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071f9061369f565b60405180910390fd5b610730610dee565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610776575061077561076f610dee565b3361131d565b5b15156107b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ae906136df565b60405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156108f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f0906136ff565b60405180910390fd5b80600060146101000a81548160ff02191690831515021790555060011515600060149054906101000a900460ff161515141561096b577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2583360405161095e91906135b7565b60405180910390a16109a3565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa3360405161099a91906135b7565b60405180910390a15b50565b6000600880549050905090565b6109bd3382611551565b15156109c857600080fd5b6109d38383836115e6565b505050565b610a17828260006040519080825280601f01601f191660200182016040528015610a115781602001600182028038833980820191505090505b50610a92565b5050565b6000610a2683610d9e565b82101515610a3357600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610a7f57fe5b9060005260206000200154905092915050565b505050565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610b2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b21906136ff565b60405180910390fd5b610b34838361160a565b610b3d8261162b565b6001905092915050565b610b628383836040518060200160405280600081525061118a565b505050565b6000610b716109a6565b82101515610b7e57600080fd5b600882815481101515610b8d57fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610c5660405180604001604052808560000151600001518152602001856000015160200151815250604051806040016040528086602001516000015181526020018660200151602001518152506040518060400160405280876040015160000151815260200187604001516020015181525085610eb9565b9050600073ffffffffffffffffffffffffffffffffffffffff166016600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610cc957600080fd5b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f48d772984846040518363ffffffff1660e01b8152600401610d2692919061379f565b60206040518083038186803b158015610d3e57600080fd5b505afa158015610d52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d769190810190612d60565b1515610d8157600080fd5b610d8c84868361102a565b610d968585610a97565b505050505050565b6000610de7600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611715565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eaf5780601f10610e8457610100808354040283529160200191610eaf565b820191906000526020600020905b815481529060010190602001808311610e9257829003601f168201915b5050505050905090565b600084848484604051602001610ed2949392919061354e565b604051602081830303815290604052805190602001209050949350505050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610f2d57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161101e9190613647565b60405180910390a35050565b6110326125bc565b60405180604001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff168152509050601581908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505080601660008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f6bc6afc76c0b332ba90fee021156bac0d12ed376d185f1615de6e5c4774f21d384848460405161117c939291906137e5565b60405180910390a150505050565b6111958484846109b3565b6111a184848484611723565b15156111ac57600080fd5b50505050565b60606111bd8261183c565b15156111c857600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561126f5780601f106112445761010080835404028352916020019161126f565b820191906000526020600020905b81548152906001019060200180831161125257829003601f168201915b50505050509050919050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113135780601f106112e857610100808354040283529160200191611313565b820191906000526020600020905b8154815290600101906020018083116112f657829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611442576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611439906136ff565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156114b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ab9061371f565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f3511b702d5ff40e5fdc0ca67119c0c54db468b05276089de85bb310f47308de56000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260405161154692919061361e565b60405180910390a150565b60008061155d83610b9f565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806115cc57508373ffffffffffffffffffffffffffffffffffffffff166115b484610647565b73ffffffffffffffffffffffffffffffffffffffff16145b806115dd57506115dc818561131d565b5b91505092915050565b6115f18383836118ae565b6115fb8382611bc0565b6116058282611d64565b505050565b6116148282611e2b565b61161e8282611d64565b61162781611fe7565b5050565b6116348161183c565b151561163f57600080fd5b6116eb60118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116d85780601f106116ad576101008083540402835291602001916116d8565b820191906000526020600020905b8154815290600101906020018083116116bb57829003601f168201915b50505050506116e683612033565b61216d565b6012600083815260200190815260200160002090805190602001906117119291906125ec565b5050565b600081600001549050919050565b60006117448473ffffffffffffffffffffffffffffffffffffffff166121b1565b15156117535760019050611834565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b815260040161179494939291906135d2565b602060405180830381600087803b1580156117ae57600080fd5b505af11580156117c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117e69190810190612e85565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515611951576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119489061377f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156119c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ba9061373f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611a805760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b19600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121fc565b611b60600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061221f565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611c186001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061223590919063ffffffff16565b90506000600760008481526020019081526020016000205490508181141515611d0b576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611c8957fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611ce357fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611d5d919061266c565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b611e348161183c565b151515611e76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e6d906136bf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611ee8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611edf9061375f565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611f81600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061221f565b808273ffffffffffffffffffffffffffffffffffffffff16611fa1610dee565b73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b6060600082141561207b576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612168565b600082905060005b6000821415156120a9578080600101915050600a828115156120a157fe5b049150612083565b6060816040519080825280601f01601f1916602001820160405280156120de5781602001600182028038833980820191505090505b50905060006001830390505b60008614151561216057600a8681151561210057fe5b0660300160f81b82828060019003935081518110151561211c57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681151561215857fe5b0495506120ea565b819450505050505b919050565b60606121a9838360405180602001604052806000815250604051806020016040528060008152506040518060200160405280600081525061227f565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156121f357506000801b8214155b92505050919050565b6122146001826000015461223590919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600061227783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061255f565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156122db5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b885181101561236657888181518110151561230957fe5b90602001015160f81c60f81b838380600101945081518110151561232957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506122f2565b600090505b87518110156123df57878181518110151561238257fe5b90602001015160f81c60f81b83838060010194508151811015156123a257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061236b565b600090505b86518110156124585786818151811015156123fb57fe5b90602001015160f81c60f81b838380600101945081518110151561241b57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506123e4565b600090505b85518110156124d157858181518110151561247457fe5b90602001015160f81c60f81b838380600101945081518110151561249457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061245d565b600090505b845181101561254a5784818151811015156124ed57fe5b90602001015160f81c60f81b838380600101945081518110151561250d57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506124d6565b82995050505050505050505095945050505050565b600083831115829015156125a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125a0919061367d565b60405180910390fd5b5060008385039050809150509392505050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061262d57805160ff191683800117855561265b565b8280016001018555821561265b579182015b8281111561265a57825182559160200191906001019061263f565b5b5090506126689190612698565b5090565b815481835581811115612693578183600052602060002091820191016126929190612698565b5b505050565b6126ba91905b808211156126b657600081600090555060010161269e565b5090565b90565b60006126c98235613a7d565b905092915050565b600082601f83011215156126e457600080fd5b60026126f76126f282613849565b61381c565b9150818385604084028201111561270d57600080fd5b60005b8381101561273d578161272388826127bd565b845260208401935060408301925050600181019050612710565b5050505092915050565b600082601f830112151561275a57600080fd5b600161276d6127688261386b565b61381c565b9150818385602084028201111561278357600080fd5b60005b838110156127b357816127998882612ab2565b845260208401935060208301925050600181019050612786565b5050505092915050565b600082601f83011215156127d057600080fd5b60026127e36127de8261388d565b61381c565b915081838560208402820111156127f957600080fd5b60005b83811015612829578161280f8882612ab2565b8452602084019350602083019250506001810190506127fc565b5050505092915050565b600082601f830112151561284657600080fd5b6002612859612854826138af565b61381c565b9150818385602084028201111561286f57600080fd5b60005b8381101561289f57816128858882612ab2565b845260208401935060208301925050600181019050612872565b5050505092915050565b60006128b58235613a8f565b905092915050565b60006128c98251613a8f565b905092915050565b60006128dd8235613a9b565b905092915050565b60006128f18235613aa5565b905092915050565b60006129058251613aa5565b905092915050565b600082601f830112151561292057600080fd5b813561293361292e826138d1565b61381c565b9150808252602083016020830185838301111561294f57600080fd5b61295a838284613b31565b50505092915050565b600082601f830112151561297657600080fd5b8135612989612984826138fd565b61381c565b915080825260208301602083018583830111156129a557600080fd5b6129b0838284613b31565b50505092915050565b6000604082840312156129cb57600080fd5b6129d5604061381c565b905060006129e584828501612ab2565b60008301525060206129f984828501612ab2565b60208301525092915050565b600060808284031215612a1757600080fd5b612a21604061381c565b90506000612a31848285016127bd565b6000830152506040612a45848285016127bd565b60208301525092915050565b60006101008284031215612a6457600080fd5b612a6e606061381c565b90506000612a7e848285016129b9565b6000830152506040612a9284828501612a05565b60208301525060c0612aa6848285016129b9565b60408301525092915050565b6000612abe8235613af1565b905092915050565b600060208284031215612ad857600080fd5b6000612ae6848285016126bd565b91505092915050565b60008060408385031215612b0257600080fd5b6000612b10858286016126bd565b9250506020612b21858286016126bd565b9150509250929050565b600080600060608486031215612b4057600080fd5b6000612b4e868287016126bd565b9350506020612b5f868287016126bd565b9250506040612b7086828701612ab2565b9150509250925092565b60008060008060808587031215612b9057600080fd5b6000612b9e878288016126bd565b9450506020612baf878288016126bd565b9350506040612bc087828801612ab2565b925050606085013567ffffffffffffffff811115612bdd57600080fd5b612be98782880161290d565b91505092959194509250565b60008060408385031215612c0857600080fd5b6000612c16858286016126bd565b9250506020612c27858286016128a9565b9150509250929050565b60008060408385031215612c4457600080fd5b6000612c52858286016126bd565b9250506020612c6385828601612ab2565b9150509250929050565b6000806000806101608587031215612c8457600080fd5b6000612c92878288016126bd565b9450506020612ca387828801612ab2565b9350506040612cb487828801612a51565b925050610140612cc687828801612747565b91505092959194509250565b6000806000806101208587031215612ce957600080fd5b6000612cf787828801612833565b9450506040612d08878288016126d1565b93505060c0612d1987828801612833565b925050610100612d2b87828801612747565b91505092959194509250565b600060208284031215612d4957600080fd5b6000612d57848285016128a9565b91505092915050565b600060208284031215612d7257600080fd5b6000612d80848285016128bd565b91505092915050565b60008060408385031215612d9c57600080fd5b6000612daa858286016128d1565b925050602083013567ffffffffffffffff811115612dc757600080fd5b612dd385828601612963565b9150509250929050565b600080600060608486031215612df257600080fd5b6000612e00868287016128d1565b935050602084013567ffffffffffffffff811115612e1d57600080fd5b612e2986828701612963565b925050604084013567ffffffffffffffff811115612e4657600080fd5b612e528682870161290d565b9150509250925092565b600060208284031215612e6e57600080fd5b6000612e7c848285016128e5565b91505092915050565b600060208284031215612e9757600080fd5b6000612ea5848285016128f9565b91505092915050565b600060208284031215612ec057600080fd5b6000612ece84828501612ab2565b91505092915050565b600080600060608486031215612eec57600080fd5b6000612efa86828701612ab2565b9350506020612f0b868287016126bd565b9250506040612f1c868287016128d1565b9150509250925092565b6000612f32838361312b565b60408301905092915050565b6000612f4a8383613521565b60208301905092915050565b6000612f62838361353f565b60208301905092915050565b612f7781613afb565b82525050565b612f8681613a2b565b82525050565b612f9581613951565b612f9f81846139c7565b9250612faa82613929565b60005b82811015612fd857612fc0858351612f26565b9450612fcb82613993565b9150600181019050612fad565b5050505050565b612fe88161395c565b612ff281846139d2565b9250612ffd82613933565b60005b8281101561302b57613013858351612f3e565b945061301e826139a0565b9150600181019050613000565b5050505050565b61303b8161395c565b61304581846139dd565b925061305082613933565b60005b8281101561307e57613066858351612f56565b9450613071826139a0565b9150600181019050613053565b5050505050565b61308e81613972565b61309881846139fe565b92506130a382613947565b60005b828110156130d1576130b9858351612f56565b94506130c4826139ba565b91506001810190506130a6565b5050505050565b6130e181613967565b6130eb81846139e8565b92506130f68261393d565b60005b828110156131245761310c858351612f3e565b9450613117826139ad565b91506001810190506130f9565b5050505050565b61313481613967565b61313e81846139f3565b92506131498261393d565b60005b828110156131775761315f858351612f56565b945061316a826139ad565b915060018101905061314c565b5050505050565b61318781613a3d565b82525050565b61319681613a49565b82525050565b60006131a78261397d565b6131b18185613a09565b93506131c1818560208601613b40565b6131ca81613b73565b840191505092915050565b60006131e082613988565b6131ea8185613a1a565b93506131fa818560208601613b40565b61320381613b73565b840191505092915050565b600061321b602083613a1a565b91507f746f20697320616c7265616479206f776e6572206f662074686520746f6b656e6000830152602082019050919050565b600061325b601483613a1a565b91507f546f6b656e20616c7265616479206578697374730000000000000000000000006000830152602082019050919050565b600061329b604183613a1a565b91507f53656e6465722073686f756c6420626520636f6e7472616374206f776e65722060008301527f6f7220746f2073686f756c6420626520617070726f766564206f70657261746f60208301527f72000000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000613327601383613a1a565b91507f4f6e6c79206f776e65727320706c6561736521000000000000000000000000006000830152602082019050919050565b6000613367601283613a1a565b91507f4e6f742061207265616c206164647265737300000000000000000000000000006000830152602082019050919050565b60006133a7601f83613a1a565b91507f746f2061646472657373206973206e6f742076616c69642061646472657373006000830152602082019050919050565b60006133e7601283613a1a565b91507f496e76616c696420746f206164647265737300000000000000000000000000006000830152602082019050919050565b6000613427602a83613a1a565b91507f66726f6d2061646472657373206973206e6f7420746865206f776e6572206f6660008301527f2074686520746f6b656e000000000000000000000000000000000000000000006020830152604082019050919050565b6040820160008201516134966000850182613521565b5060208201516134a96020850182613521565b50505050565b6080820160008201516134c560008501826130d8565b5060208201516134d860408501826130d8565b50505050565b610100820160008201516134f56000850182613480565b50602082015161350860408501826134af565b50604082015161351b60c0850182613480565b50505050565b61352a81613a73565b82525050565b61353981613a73565b82525050565b61354881613a73565b82525050565b600061355a8287613085565b60408201915061356a8286612f8c565b60808201915061357a8285613085565b60408201915061358a8284613032565b60208201915081905095945050505050565b60006020820190506135b16000830184612f7d565b92915050565b60006020820190506135cc6000830184612f6e565b92915050565b60006080820190506135e76000830187612f6e565b6135f46020830186612f7d565b6136016040830185613530565b8181036060830152613613818461319c565b905095945050505050565b60006040820190506136336000830185612f7d565b6136406020830184612f7d565b9392505050565b600060208201905061365c600083018461317e565b92915050565b6000602082019050613677600083018461318d565b92915050565b6000602082019050818103600083015261369781846131d5565b905092915050565b600060208201905081810360008301526136b88161320e565b9050919050565b600060208201905081810360008301526136d88161324e565b9050919050565b600060208201905081810360008301526136f88161328e565b9050919050565b600060208201905081810360008301526137188161331a565b9050919050565b600060208201905081810360008301526137388161335a565b9050919050565b600060208201905081810360008301526137588161339a565b9050919050565b60006020820190508181036000830152613778816133da565b9050919050565b600060208201905081810360008301526137988161341a565b9050919050565b6000610120820190506137b560008301856134de565b6137c3610100830184612fdf565b9392505050565b60006020820190506137df6000830184613530565b92915050565b60006060820190506137fa6000830186613530565b6138076020830185612f7d565b613814604083018461318d565b949350505050565b6000604051905081810181811067ffffffffffffffff8211171561383f57600080fd5b8060405250919050565b600067ffffffffffffffff82111561386057600080fd5b602082029050919050565b600067ffffffffffffffff82111561388257600080fd5b602082029050919050565b600067ffffffffffffffff8211156138a457600080fd5b602082029050919050565b600067ffffffffffffffff8211156138c657600080fd5b602082029050919050565b600067ffffffffffffffff8211156138e857600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561391457600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060019050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613a3682613a53565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613a8882613ad1565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613b0682613b0d565b9050919050565b6000613b1882613b1f565b9050919050565b6000613b2a82613a53565b9050919050565b82818337600083830152505050565b60005b83811015613b5e578082015181840152602081019050613b43565b83811115613b6d576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a723058204b7d171a70e9ed29390093862a5ff08e7f8f4e5d92a87fbb47a94eb679fbb5186c6578706572696d656e74616cf5003768747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c80636352211e116100de578063a22cb46511610097578063c87b56dd11610071578063c87b56dd146104a3578063d547cfb7146104d3578063e985e9c5146104f1578063f2fde38b146105215761018e565b8063a22cb4651461044f578063b3b720071461046b578063b88d4fde146104875761018e565b80636352211e146103675780636e59236b1461039757806370a08231146103b35780638da5cb5b146103e357806395d89b41146104015780639bb640b51461041f5761018e565b806323b872dd1161014b57806338bbfa501161012557806338bbfa50146102cf57806340c10f19146102eb57806342842e0e1461031b5780634f6ccce7146103375761018e565b806323b872dd1461026757806327dc297e146102835780632f745c591461029f5761018e565b806301ffc9a71461019357806306fdde03146101c3578063081812fc146101e1578063095ea7b31461021157806316c38b3c1461022d57806318160ddd14610249575b600080fd5b6101ad60048036036101a89190810190612e5c565b61053d565b6040516101ba9190613647565b60405180910390f35b6101cb6105a5565b6040516101d8919061367d565b60405180910390f35b6101fb60048036036101f69190810190612eae565b610647565b604051610208919061359c565b60405180910390f35b61022b60048036036102269190810190612c31565b610684565b005b61024760048036036102429190810190612d37565b610868565b005b6102516109a6565b60405161025e91906137ca565b60405180910390f35b610281600480360361027c9190810190612b2b565b6109b3565b005b61029d60048036036102989190810190612d89565b6109d8565b005b6102b960048036036102b49190810190612c31565b610a1b565b6040516102c691906137ca565b60405180910390f35b6102e960048036036102e49190810190612ddd565b610a92565b005b61030560048036036103009190810190612c31565b610a97565b6040516103129190613647565b60405180910390f35b61033560048036036103309190810190612b2b565b610b47565b005b610351600480360361034c9190810190612eae565b610b67565b60405161035e91906137ca565b60405180910390f35b610381600480360361037c9190810190612eae565b610b9f565b60405161038e919061359c565b60405180910390f35b6103b160048036036103ac9190810190612c6d565b610bdc565b005b6103cd60048036036103c89190810190612ac6565b610d9e565b6040516103da91906137ca565b60405180910390f35b6103eb610dee565b6040516103f8919061359c565b60405180910390f35b610409610e17565b604051610416919061367d565b60405180910390f35b61043960048036036104349190810190612cd2565b610eb9565b6040516104469190613662565b60405180910390f35b61046960048036036104649190810190612bf5565b610ef2565b005b61048560048036036104809190810190612ed7565b61102a565b005b6104a1600480360361049c9190810190612b7a565b61118a565b005b6104bd60048036036104b89190810190612eae565b6111b2565b6040516104ca919061367d565b60405180910390f35b6104db61127b565b6040516104e8919061367d565b60405180910390f35b61050b60048036036105069190810190612aef565b61131d565b6040516105189190613647565b60405180910390f35b61053b60048036036105369190810190612ac6565b6113b1565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561063d5780601f106106125761010080835404028352916020019161063d565b820191906000526020600020905b81548152906001019060200180831161062057829003601f168201915b5050505050905090565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610728576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071f9061369f565b60405180910390fd5b610730610dee565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610776575061077561076f610dee565b3361131d565b5b15156107b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ae906136df565b60405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156108f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f0906136ff565b60405180910390fd5b80600060146101000a81548160ff02191690831515021790555060011515600060149054906101000a900460ff161515141561096b577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2583360405161095e91906135b7565b60405180910390a16109a3565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa3360405161099a91906135b7565b60405180910390a15b50565b6000600880549050905090565b6109bd3382611551565b15156109c857600080fd5b6109d38383836115e6565b505050565b610a17828260006040519080825280601f01601f191660200182016040528015610a115781602001600182028038833980820191505090505b50610a92565b5050565b6000610a2683610d9e565b82101515610a3357600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610a7f57fe5b9060005260206000200154905092915050565b505050565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610b2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b21906136ff565b60405180910390fd5b610b34838361160a565b610b3d8261162b565b6001905092915050565b610b628383836040518060200160405280600081525061118a565b505050565b6000610b716109a6565b82101515610b7e57600080fd5b600882815481101515610b8d57fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610c5660405180604001604052808560000151600001518152602001856000015160200151815250604051806040016040528086602001516000015181526020018660200151602001518152506040518060400160405280876040015160000151815260200187604001516020015181525085610eb9565b9050600073ffffffffffffffffffffffffffffffffffffffff166016600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610cc957600080fd5b601460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f48d772984846040518363ffffffff1660e01b8152600401610d2692919061379f565b60206040518083038186803b158015610d3e57600080fd5b505afa158015610d52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d769190810190612d60565b1515610d8157600080fd5b610d8c84868361102a565b610d968585610a97565b505050505050565b6000610de7600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611715565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eaf5780601f10610e8457610100808354040283529160200191610eaf565b820191906000526020600020905b815481529060010190602001808311610e9257829003601f168201915b5050505050905090565b600084848484604051602001610ed2949392919061354e565b604051602081830303815290604052805190602001209050949350505050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610f2d57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161101e9190613647565b60405180910390a35050565b6110326125bc565b60405180604001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff168152509050601581908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505080601660008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f6bc6afc76c0b332ba90fee021156bac0d12ed376d185f1615de6e5c4774f21d384848460405161117c939291906137e5565b60405180910390a150505050565b6111958484846109b3565b6111a184848484611723565b15156111ac57600080fd5b50505050565b60606111bd8261183c565b15156111c857600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561126f5780601f106112445761010080835404028352916020019161126f565b820191906000526020600020905b81548152906001019060200180831161125257829003601f168201915b50505050509050919050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113135780601f106112e857610100808354040283529160200191611313565b820191906000526020600020905b8154815290600101906020018083116112f657829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611442576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611439906136ff565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156114b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ab9061371f565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f3511b702d5ff40e5fdc0ca67119c0c54db468b05276089de85bb310f47308de56000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260405161154692919061361e565b60405180910390a150565b60008061155d83610b9f565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806115cc57508373ffffffffffffffffffffffffffffffffffffffff166115b484610647565b73ffffffffffffffffffffffffffffffffffffffff16145b806115dd57506115dc818561131d565b5b91505092915050565b6115f18383836118ae565b6115fb8382611bc0565b6116058282611d64565b505050565b6116148282611e2b565b61161e8282611d64565b61162781611fe7565b5050565b6116348161183c565b151561163f57600080fd5b6116eb60118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116d85780601f106116ad576101008083540402835291602001916116d8565b820191906000526020600020905b8154815290600101906020018083116116bb57829003601f168201915b50505050506116e683612033565b61216d565b6012600083815260200190815260200160002090805190602001906117119291906125ec565b5050565b600081600001549050919050565b60006117448473ffffffffffffffffffffffffffffffffffffffff166121b1565b15156117535760019050611834565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b815260040161179494939291906135d2565b602060405180830381600087803b1580156117ae57600080fd5b505af11580156117c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117e69190810190612e85565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515611951576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119489061377f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156119c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ba9061373f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611a805760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b19600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206121fc565b611b60600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061221f565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611c186001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061223590919063ffffffff16565b90506000600760008481526020019081526020016000205490508181141515611d0b576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611c8957fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611ce357fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611d5d919061266c565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b611e348161183c565b151515611e76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e6d906136bf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611ee8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611edf9061375f565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611f81600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061221f565b808273ffffffffffffffffffffffffffffffffffffffff16611fa1610dee565b73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b6060600082141561207b576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612168565b600082905060005b6000821415156120a9578080600101915050600a828115156120a157fe5b049150612083565b6060816040519080825280601f01601f1916602001820160405280156120de5781602001600182028038833980820191505090505b50905060006001830390505b60008614151561216057600a8681151561210057fe5b0660300160f81b82828060019003935081518110151561211c57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681151561215857fe5b0495506120ea565b819450505050505b919050565b60606121a9838360405180602001604052806000815250604051806020016040528060008152506040518060200160405280600081525061227f565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156121f357506000801b8214155b92505050919050565b6122146001826000015461223590919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600061227783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061255f565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156122db5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b885181101561236657888181518110151561230957fe5b90602001015160f81c60f81b838380600101945081518110151561232957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506122f2565b600090505b87518110156123df57878181518110151561238257fe5b90602001015160f81c60f81b83838060010194508151811015156123a257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061236b565b600090505b86518110156124585786818151811015156123fb57fe5b90602001015160f81c60f81b838380600101945081518110151561241b57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506123e4565b600090505b85518110156124d157858181518110151561247457fe5b90602001015160f81c60f81b838380600101945081518110151561249457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061245d565b600090505b845181101561254a5784818151811015156124ed57fe5b90602001015160f81c60f81b838380600101945081518110151561250d57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506124d6565b82995050505050505050505095945050505050565b600083831115829015156125a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125a0919061367d565b60405180910390fd5b5060008385039050809150509392505050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061262d57805160ff191683800117855561265b565b8280016001018555821561265b579182015b8281111561265a57825182559160200191906001019061263f565b5b5090506126689190612698565b5090565b815481835581811115612693578183600052602060002091820191016126929190612698565b5b505050565b6126ba91905b808211156126b657600081600090555060010161269e565b5090565b90565b60006126c98235613a7d565b905092915050565b600082601f83011215156126e457600080fd5b60026126f76126f282613849565b61381c565b9150818385604084028201111561270d57600080fd5b60005b8381101561273d578161272388826127bd565b845260208401935060408301925050600181019050612710565b5050505092915050565b600082601f830112151561275a57600080fd5b600161276d6127688261386b565b61381c565b9150818385602084028201111561278357600080fd5b60005b838110156127b357816127998882612ab2565b845260208401935060208301925050600181019050612786565b5050505092915050565b600082601f83011215156127d057600080fd5b60026127e36127de8261388d565b61381c565b915081838560208402820111156127f957600080fd5b60005b83811015612829578161280f8882612ab2565b8452602084019350602083019250506001810190506127fc565b5050505092915050565b600082601f830112151561284657600080fd5b6002612859612854826138af565b61381c565b9150818385602084028201111561286f57600080fd5b60005b8381101561289f57816128858882612ab2565b845260208401935060208301925050600181019050612872565b5050505092915050565b60006128b58235613a8f565b905092915050565b60006128c98251613a8f565b905092915050565b60006128dd8235613a9b565b905092915050565b60006128f18235613aa5565b905092915050565b60006129058251613aa5565b905092915050565b600082601f830112151561292057600080fd5b813561293361292e826138d1565b61381c565b9150808252602083016020830185838301111561294f57600080fd5b61295a838284613b31565b50505092915050565b600082601f830112151561297657600080fd5b8135612989612984826138fd565b61381c565b915080825260208301602083018583830111156129a557600080fd5b6129b0838284613b31565b50505092915050565b6000604082840312156129cb57600080fd5b6129d5604061381c565b905060006129e584828501612ab2565b60008301525060206129f984828501612ab2565b60208301525092915050565b600060808284031215612a1757600080fd5b612a21604061381c565b90506000612a31848285016127bd565b6000830152506040612a45848285016127bd565b60208301525092915050565b60006101008284031215612a6457600080fd5b612a6e606061381c565b90506000612a7e848285016129b9565b6000830152506040612a9284828501612a05565b60208301525060c0612aa6848285016129b9565b60408301525092915050565b6000612abe8235613af1565b905092915050565b600060208284031215612ad857600080fd5b6000612ae6848285016126bd565b91505092915050565b60008060408385031215612b0257600080fd5b6000612b10858286016126bd565b9250506020612b21858286016126bd565b9150509250929050565b600080600060608486031215612b4057600080fd5b6000612b4e868287016126bd565b9350506020612b5f868287016126bd565b9250506040612b7086828701612ab2565b9150509250925092565b60008060008060808587031215612b9057600080fd5b6000612b9e878288016126bd565b9450506020612baf878288016126bd565b9350506040612bc087828801612ab2565b925050606085013567ffffffffffffffff811115612bdd57600080fd5b612be98782880161290d565b91505092959194509250565b60008060408385031215612c0857600080fd5b6000612c16858286016126bd565b9250506020612c27858286016128a9565b9150509250929050565b60008060408385031215612c4457600080fd5b6000612c52858286016126bd565b9250506020612c6385828601612ab2565b9150509250929050565b6000806000806101608587031215612c8457600080fd5b6000612c92878288016126bd565b9450506020612ca387828801612ab2565b9350506040612cb487828801612a51565b925050610140612cc687828801612747565b91505092959194509250565b6000806000806101208587031215612ce957600080fd5b6000612cf787828801612833565b9450506040612d08878288016126d1565b93505060c0612d1987828801612833565b925050610100612d2b87828801612747565b91505092959194509250565b600060208284031215612d4957600080fd5b6000612d57848285016128a9565b91505092915050565b600060208284031215612d7257600080fd5b6000612d80848285016128bd565b91505092915050565b60008060408385031215612d9c57600080fd5b6000612daa858286016128d1565b925050602083013567ffffffffffffffff811115612dc757600080fd5b612dd385828601612963565b9150509250929050565b600080600060608486031215612df257600080fd5b6000612e00868287016128d1565b935050602084013567ffffffffffffffff811115612e1d57600080fd5b612e2986828701612963565b925050604084013567ffffffffffffffff811115612e4657600080fd5b612e528682870161290d565b9150509250925092565b600060208284031215612e6e57600080fd5b6000612e7c848285016128e5565b91505092915050565b600060208284031215612e9757600080fd5b6000612ea5848285016128f9565b91505092915050565b600060208284031215612ec057600080fd5b6000612ece84828501612ab2565b91505092915050565b600080600060608486031215612eec57600080fd5b6000612efa86828701612ab2565b9350506020612f0b868287016126bd565b9250506040612f1c868287016128d1565b9150509250925092565b6000612f32838361312b565b60408301905092915050565b6000612f4a8383613521565b60208301905092915050565b6000612f62838361353f565b60208301905092915050565b612f7781613afb565b82525050565b612f8681613a2b565b82525050565b612f9581613951565b612f9f81846139c7565b9250612faa82613929565b60005b82811015612fd857612fc0858351612f26565b9450612fcb82613993565b9150600181019050612fad565b5050505050565b612fe88161395c565b612ff281846139d2565b9250612ffd82613933565b60005b8281101561302b57613013858351612f3e565b945061301e826139a0565b9150600181019050613000565b5050505050565b61303b8161395c565b61304581846139dd565b925061305082613933565b60005b8281101561307e57613066858351612f56565b9450613071826139a0565b9150600181019050613053565b5050505050565b61308e81613972565b61309881846139fe565b92506130a382613947565b60005b828110156130d1576130b9858351612f56565b94506130c4826139ba565b91506001810190506130a6565b5050505050565b6130e181613967565b6130eb81846139e8565b92506130f68261393d565b60005b828110156131245761310c858351612f3e565b9450613117826139ad565b91506001810190506130f9565b5050505050565b61313481613967565b61313e81846139f3565b92506131498261393d565b60005b828110156131775761315f858351612f56565b945061316a826139ad565b915060018101905061314c565b5050505050565b61318781613a3d565b82525050565b61319681613a49565b82525050565b60006131a78261397d565b6131b18185613a09565b93506131c1818560208601613b40565b6131ca81613b73565b840191505092915050565b60006131e082613988565b6131ea8185613a1a565b93506131fa818560208601613b40565b61320381613b73565b840191505092915050565b600061321b602083613a1a565b91507f746f20697320616c7265616479206f776e6572206f662074686520746f6b656e6000830152602082019050919050565b600061325b601483613a1a565b91507f546f6b656e20616c7265616479206578697374730000000000000000000000006000830152602082019050919050565b600061329b604183613a1a565b91507f53656e6465722073686f756c6420626520636f6e7472616374206f776e65722060008301527f6f7220746f2073686f756c6420626520617070726f766564206f70657261746f60208301527f72000000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000613327601383613a1a565b91507f4f6e6c79206f776e65727320706c6561736521000000000000000000000000006000830152602082019050919050565b6000613367601283613a1a565b91507f4e6f742061207265616c206164647265737300000000000000000000000000006000830152602082019050919050565b60006133a7601f83613a1a565b91507f746f2061646472657373206973206e6f742076616c69642061646472657373006000830152602082019050919050565b60006133e7601283613a1a565b91507f496e76616c696420746f206164647265737300000000000000000000000000006000830152602082019050919050565b6000613427602a83613a1a565b91507f66726f6d2061646472657373206973206e6f7420746865206f776e6572206f6660008301527f2074686520746f6b656e000000000000000000000000000000000000000000006020830152604082019050919050565b6040820160008201516134966000850182613521565b5060208201516134a96020850182613521565b50505050565b6080820160008201516134c560008501826130d8565b5060208201516134d860408501826130d8565b50505050565b610100820160008201516134f56000850182613480565b50602082015161350860408501826134af565b50604082015161351b60c0850182613480565b50505050565b61352a81613a73565b82525050565b61353981613a73565b82525050565b61354881613a73565b82525050565b600061355a8287613085565b60408201915061356a8286612f8c565b60808201915061357a8285613085565b60408201915061358a8284613032565b60208201915081905095945050505050565b60006020820190506135b16000830184612f7d565b92915050565b60006020820190506135cc6000830184612f6e565b92915050565b60006080820190506135e76000830187612f6e565b6135f46020830186612f7d565b6136016040830185613530565b8181036060830152613613818461319c565b905095945050505050565b60006040820190506136336000830185612f7d565b6136406020830184612f7d565b9392505050565b600060208201905061365c600083018461317e565b92915050565b6000602082019050613677600083018461318d565b92915050565b6000602082019050818103600083015261369781846131d5565b905092915050565b600060208201905081810360008301526136b88161320e565b9050919050565b600060208201905081810360008301526136d88161324e565b9050919050565b600060208201905081810360008301526136f88161328e565b9050919050565b600060208201905081810360008301526137188161331a565b9050919050565b600060208201905081810360008301526137388161335a565b9050919050565b600060208201905081810360008301526137588161339a565b9050919050565b60006020820190508181036000830152613778816133da565b9050919050565b600060208201905081810360008301526137988161341a565b9050919050565b6000610120820190506137b560008301856134de565b6137c3610100830184612fdf565b9392505050565b60006020820190506137df6000830184613530565b92915050565b60006060820190506137fa6000830186613530565b6138076020830185612f7d565b613814604083018461318d565b949350505050565b6000604051905081810181811067ffffffffffffffff8211171561383f57600080fd5b8060405250919050565b600067ffffffffffffffff82111561386057600080fd5b602082029050919050565b600067ffffffffffffffff82111561388257600080fd5b602082029050919050565b600067ffffffffffffffff8211156138a457600080fd5b602082029050919050565b600067ffffffffffffffff8211156138c657600080fd5b602082029050919050565b600067ffffffffffffffff8211156138e857600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561391457600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060019050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613a3682613a53565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613a8882613ad1565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613b0682613b0d565b9050919050565b6000613b1882613b1f565b9050919050565b6000613b2a82613a53565b9050919050565b82818337600083830152505050565b60005b83811015613b5e578082015181840152602081019050613b43565b83811115613b6d576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a723058204b7d171a70e9ed29390093862a5ff08e7f8f4e5d92a87fbb47a94eb679fbb5186c6578706572696d656e74616cf50037",
  "sourceMap": "228:2105:3:-;;;20593:95:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;426:137:3;8:9:-1;5:2;;;30:1;27;20:12;5:2;426:137:3;;;;;;;;;;;;;;;;;;;;;;20694:121:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20764:4;20770:6;20778:12;18596:242;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;461:10;452:6;;:19;;;;;;;;;;;;;;;;;;486:40;515:1;519:6;;;;;;;;;;;486:40;;;;;;;;;;;;;;;;1208:5;1198:7;;:15;;;;;;;;;;;;;;;;;;2447:40;2039:10;2466:20;;2447:18;;;:40;;:::i;:::-;4593;4467:10;4612:20;;4593:18;;;:40;;:::i;:::-;11473:51;11079:10;11492:31;;11473:18;;;:51;;:::i;:::-;18704:4;18696:5;:12;;;;;;;;;;;;:::i;:::-;;18728:6;18718:7;:16;;;;;;;;;;;;:::i;:::-;;18760:12;18744:13;:28;;;;;;;;;;;;:::i;:::-;;18782:49;18407:10;18801:29;;18782:18;;;:49;;:::i;:::-;18596:242;;;20694:121;;540:15:3;514:14;;:42;;;;;;;;;;;;;;;;;;426:137;228:2105;;2797:158:0;2887:10;2872:25;;:11;:25;;;;;2864:34;;;;;;;;2944:4;2908:20;:33;2929:11;2908:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;2797:158;:::o;228:2105:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:122:-1:-;;83:39;114:6;108:13;83:39;;;74:48;;68:59;;;;;134:263;;249:2;237:9;228:7;224:23;220:32;217:2;;;265:1;262;255:12;217:2;300:1;317:64;373:7;364:6;353:9;349:22;317:64;;;307:74;;279:108;211:186;;;;;404:142;495:45;534:5;495:45;;;490:3;483:58;477:69;;;553:120;636:31;661:5;636:31;;;631:3;624:44;618:55;;;680:340;;834:2;823:9;819:18;811:26;;848:79;924:1;913:9;909:17;900:6;848:79;;;938:72;1006:2;995:9;991:18;982:6;938:72;;;805:215;;;;;;1027:105;;1096:31;1121:5;1096:31;;;1085:42;;1079:53;;;;1139:128;;1219:42;1212:5;1208:54;1197:65;;1191:76;;;;1274:105;;1343:31;1368:5;1343:31;;;1332:42;;1326:53;;;;1386:128;;1466:42;1459:5;1455:54;1444:65;;1438:76;;;;1521:129;;1608:37;1639:5;1608:37;;;1595:50;;1589:61;;;;1657:121;;1736:37;1767:5;1736:37;;;1723:50;;1717:61;;;;1785:115;;1864:31;1889:5;1864:31;;;1851:44;;1845:55;;;;228:2105:3;;;;;;;",
  "deployedSourceMap": "228:2105:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;228:2105:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2585:133:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;18844:83;;;:::i;:::-;;;;;;;;;;;;;;;;5598:116;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5110:482;;;;;;;;;;;;;;;;:::i;:::-;;1748:213;;;;;;;;;;;;;;;;:::i;:::-;;12238:94;;;:::i;:::-;;;;;;;;;;;;;;;;6691:180;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:2;;;;;;;;;;;;;;;;:::i;:::-;;11904:182:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:2;;;;;;;;;;;;;;;;:::i;:::-;;20821:174:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6877:132;;;;;;;;;;;;;;;;:::i;:::-;;12669:148;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4929:108;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1559:509:3;;;;;;;;;;;;;;;;:::i;:::-;;4695:183:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;865:76;;;:::i;:::-;;;;;;;;;;;;;;;;18933:87;;;:::i;:::-;;;;;;;;;;;;;;;;2116:214:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6006:213:0;;;;;;;;;;;;;;;;:::i;:::-;;1086:252:3;;;;;;;;;;;;;;;;:::i;:::-;;7015:211:0;;;;;;;;;;;;;;;;:::i;:::-;;19131:151;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;19026:99;;;:::i;:::-;;;;;;;;;;;;;;;;6540:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;645:214;;;;;;;;;;;;;;;;:::i;:::-;;2585:133;2655:4;2678:20;:33;2699:11;2678:33;;;;;;;;;;;;;;;;;;;;;;;;;;;2671:40;;2585:133;;;:::o;18844:83::-;18883:13;18915:5;18908:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18844:83;:::o;5598:116::-;5657:7;5683:15;:24;5699:7;5683:24;;;;;;;;;;;;;;;;;;;;;5676:31;;5598:116;;;:::o;5110:482::-;5187:11;:20;5199:7;5187:20;;;;;;;;;;;;;;;;;;;;;5181:26;;:2;:26;;;;5173:71;;;;;;;;;;;;;;;;;;;;;;;;5380:7;:5;:7::i;:::-;5366:21;;:10;:21;;;:62;;;;5391:37;5408:7;:5;:7::i;:::-;5417:10;5391:16;:37::i;:::-;5366:62;5358:140;;;;;;;;;;;;;;;;;;;;;;;;5535:2;5508:15;:24;5524:7;5508:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;5577:7;5573:2;5552:33;;5561:10;5552:33;;;;;;;;;;;;5110:482;;:::o;1748:213::-;588:10;578:20;;:6;;;;;;;;;;;:20;;;570:51;;;;;;;;;;;;;;;;;;;;;;;;1817:4;1807:7;;:14;;;;;;;;;;;;;;;;;;1845:4;1834:15;;:7;;;;;;;;;;;:15;;;1831:124;;;1870:18;1877:10;1870:18;;;;;;;;;;;;;;;1831:124;;;1924:20;1933:10;1924:20;;;;;;;;;;;;;;;1831:124;1748:213;:::o;12238:94::-;12282:7;12308:10;:17;;;;12301:24;;12238:94;:::o;6691:180::-;6781:39;6800:10;6812:7;6781:18;:39::i;:::-;6773:48;;;;;;;;6832:32;6846:4;6852:2;6856:7;6832:13;:32::i;:::-;6691:180;;;:::o;14801:122:2:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:2;;;;14876:10;:40::i;:::-;14801:122;;:::o;11904:182:0:-;11984:7;12019:16;12029:5;12019:9;:16::i;:::-;12011:5;:24;12003:33;;;;;;;;12053:12;:19;12066:5;12053:19;;;;;;;;;;;;;;;12073:5;12053:26;;;;;;;;;;;;;;;;;;12046:33;;11904:182;;;;:::o;14929:166:2:-;;;;:::o;20821:174:0:-;20889:4;588:10;578:20;;:6;;;;;;;;;;;:20;;;570:51;;;;;;;;;;;;;;;;;;;;;;;;20907:24;20919:2;20923:7;20907:11;:24::i;:::-;20941:26;20959:7;20941:17;:26::i;:::-;20984:4;20977:11;;20821:174;;;;:::o;6877:132::-;6963:39;6980:4;6986:2;6990:7;6963:39;;;;;;;;;;;;:16;:39::i;:::-;6877:132;;;:::o;12669:148::-;12727:7;12762:13;:11;:13::i;:::-;12754:5;:21;12746:30;;;;;;;;12793:10;12804:5;12793:17;;;;;;;;;;;;;;;;;;12786:24;;12669:148;;;:::o;4929:108::-;4984:7;5010:11;:20;5022:7;5010:20;;;;;;;;;;;;;;;;;;;;;5003:27;;4929:108;;;:::o;1559:509:3:-;1692:19;1714:91;;;;;;;;;1727:5;:7;;;:9;;;1714:91;;;;1738:5;:7;;;:9;;;1714:91;;;;;;;;;;;1751:5;:7;;;:9;;;1714:91;;;;1762:5;:7;;;:9;;;1714:91;;;;;;;;;;;1775:5;:7;;;:9;;;1714:91;;;;1786:5;:7;;;:9;;;1714:91;;;1798:6;1714:11;:91::i;:::-;1692:113;;1867:1;1823:46;;:16;:29;1840:11;1823:29;;;;;;;;;;;:32;;;;;;;;;;;;:46;;;1815:55;;;;;;;;1949:14;;;;;;;;;;;:23;;;1973:5;1979:6;1949:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1949:37:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1949:37:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1949:37:3;;;;;;;;;1941:46;;;;;;;;1997:37;2009:7;2018:2;2022:11;1997;:37::i;:::-;2044:17;2049:2;2053:7;2044:4;:17::i;:::-;;1559:509;;;;;:::o;4695:183:0:-;4750:7;4837:34;:17;:24;4855:5;4837:24;;;;;;;;;;;;;;;:32;:34::i;:::-;4830:41;;4695:183;;;:::o;865:76::-;902:7;928:6;;;;;;;;;;;921:13;;865:76;:::o;18933:87::-;18974:13;19006:7;18999:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18933:87;:::o;2116:214:3:-;2253:7;2306:1;2309;2312;2315:6;2289:33;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2289:33:3;;;2279:44;;;;;;2272:51;;2116:214;;;;;;:::o;6006:213:0:-;6091:10;6085:16;;:2;:16;;;;6077:25;;;;;;;;6149:8;6112:18;:30;6131:10;6112:30;;;;;;;;;;;;;;;:34;6143:2;6112:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;6199:2;6172:40;;6187:10;6172:40;;;6203:8;6172:40;;;;;;;;;;;;;;;6006:213;;:::o;1086:252:3:-;1164:24;;:::i;:::-;1191:19;;;;;;;;1200:5;1191:19;;;;1207:2;1191:19;;;;;1164:46;;1220:9;1235:8;1220:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1220:24:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1278:8;1254:16;:21;1271:3;1254:21;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:30;1315:5;1322:2;1326:3;1301:30;;;;;;;;;;;;;;;;;1086:252;;;;:::o;7015:211:0:-;7121:31;7134:4;7140:2;7144:7;7121:12;:31::i;:::-;7170:48;7193:4;7199:2;7203:7;7212:5;7170:22;:48::i;:::-;7162:57;;;;;;;;7015:211;;;;:::o;19131:151::-;19189:13;19222:16;19230:7;19222;:16::i;:::-;19214:25;;;;;;;;19256:10;:19;19267:7;19256:19;;;;;;;;;;;19249:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19131:151;;;:::o;19026:99::-;19073:13;19105;19098:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19026:99;:::o;6540:145::-;6620:4;6643:18;:25;6662:5;6643:25;;;;;;;;;;;;;;;:35;6669:8;6643:35;;;;;;;;;;;;;;;;;;;;;;;;;6636:42;;6540:145;;;;:::o;645:214::-;588:10;578:20;;:6;;;;;;;;;;;:20;;;570:51;;;;;;;;;;;;;;;;;;;;;;;;745:1;725:22;;:8;:22;;;;717:53;;;;;;;;;;;;;;;;;;;;;;;;790:8;780:6;;:18;;;;;;;;;;;;;;;;;;814:38;835:6;;;;;;;;;;;843:8;814:38;;;;;;;;;;;;;;;;645:214;:::o;7932:246::-;8017:4;8033:13;8049:16;8057:7;8049;:16::i;:::-;8033:32;;8094:5;8083:16;;:7;:16;;;:51;;;;8127:7;8103:31;;:20;8115:7;8103:11;:20::i;:::-;:31;;;8083:51;:87;;;;8138:32;8155:5;8162:7;8138:16;:32::i;:::-;8083:87;8075:96;;;7932:246;;;;:::o;13192:239::-;13277:38;13297:4;13303:2;13307:7;13277:19;:38::i;:::-;13326:47;13359:4;13365:7;13326:32;:47::i;:::-;13384:40;13412:2;13416:7;13384:27;:40::i;:::-;13192:239;;;:::o;13686:196::-;13749:24;13761:2;13765:7;13749:11;:24::i;:::-;13784:40;13812:2;13816:7;13784:27;:40::i;:::-;13835;13867:7;13835:31;:40::i;:::-;13686:196;;:::o;19760:164::-;19825:16;19833:7;19825;:16::i;:::-;19817:25;;;;;;;;19874:43;19884:13;19874:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19899:17;19908:7;19899:8;:17::i;:::-;19874:9;:43::i;:::-;19852:10;:19;19863:7;19852:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;19760:164;:::o;1065:112:5:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;9924:347:0:-;10045:4;10070:15;:2;:13;;;:15::i;:::-;10069:16;10065:58;;;10108:4;10101:11;;;;10065:58;10133:13;10165:2;10149:36;;;10186:10;10198:4;10204:7;10213:5;10149:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10149:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10149:70:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10149:70:0;;;;;;;;;10133:86;;3600:10;10247:16;;10237:26;;;:6;:26;;;;10229:35;;;9924:347;;;;;;;:::o;7420:152::-;7477:4;7493:13;7509:11;:20;7521:7;7509:20;;;;;;;;;;;;;;;;;;;;;7493:36;;7563:1;7546:19;;:5;:19;;;;7539:26;;;7420:152;;;:::o;8837:559::-;8938:11;:20;8950:7;8938:20;;;;;;;;;;;;;;;;;;;;;8930:28;;:4;:28;;;8922:83;;;;;;;;;;;;;;;;;;;;;;;;9037:1;9023:16;;:2;:16;;;;9015:60;;;;;;;;;;;;;;;;;;;;;;;;9159:1;9123:38;;:15;:24;9139:7;9123:24;;;;;;;;;;;;;;;;;;;;;:38;;;;9119:106;;;9212:1;9177:15;:24;9193:7;9177:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;9119:106;9257:2;9234:11;:20;9246:7;9234:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9269:35;:17;:23;9287:4;9269:23;;;;;;;;;;;;;;;:33;:35::i;:::-;9314:33;:17;:21;9332:2;9314:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9381:7;9377:2;9362:27;;9371:4;9362:27;;;;;;;;;;;;8837:559;;;:::o;15658:1128::-;15920:22;15945:32;15975:1;15945:12;:18;15958:4;15945:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;15920:57;;15987:18;16008:17;:26;16026:7;16008:26;;;;;;;;;;;;15987:47;;16152:14;16138:10;:28;;16134:323;;;16182:19;16204:12;:18;16217:4;16204:18;;;;;;;;;;;;;;;16223:14;16204:34;;;;;;;;;;;;;;;;;;16182:56;;16286:11;16253:12;:18;16266:4;16253:18;;;;;;;;;;;;;;;16272:10;16253:30;;;;;;;;;;;;;;;;;:44;;;;16402:10;16369:17;:30;16387:11;16369:30;;;;;;;;;;;:43;;;;16134:323;;16543:12;:18;16556:4;16543:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;15658:1128;;;;:::o;14504:183::-;14617:12;:16;14630:2;14617:16;;;;;;;;;;;;;;;:23;;;;14588:17;:26;14606:7;14588:26;;;;;;;;;;;:52;;;;14650:12;:16;14663:2;14650:16;;;;;;;;;;;;;;;14672:7;14650:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;14650:30:0;;;;;;;;;;;;;;;;;;;;;;14504:183;;:::o;8335:303::-;8407:16;8415:7;8407;:16::i;:::-;8406:17;8398:50;;;;;;;;;;;;;;;;;;;;;;;;8480:1;8466:16;;:2;:16;;;;8458:47;;;;;;;;;;;;;;;;;;;;;;;;8541:2;8518:11;:20;8530:7;8518:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8553:33;:17;:21;8571:2;8553:21;;;;;;;;;;;;;;;:31;:33::i;:::-;8623:7;8619:2;8601:30;;8610:7;:5;:7::i;:::-;8601:30;;;;;;;;;;;;8335:303;;:::o;14882:161::-;14985:10;:17;;;;14958:15;:24;14974:7;14958:24;;;;;;;;;;;:44;;;;15012:10;15028:7;15012:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15012:24:0;;;;;;;;;;;;;;;;;;;;;;14882:161;:::o;43271:465:2:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;;43456:66;;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:2;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;;43601:100;;;43664:2;43659;:7;;;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;686:610:8:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;1367:108:5:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:6:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40282:1020:2:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:2;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;1732:187:6:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;228:2105:3:-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;152:672;;286:3;279:4;271:6;267:17;263:27;256:35;253:2;;;304:1;301;294:12;253:2;328:3;346:97;361:81;435:6;361:81;;;346:97;;;337:106;;460:5;519:6;566:3;558:4;550:6;546:17;541:3;537:27;534:36;531:2;;;583:1;580;573:12;531:2;608:1;593:225;618:6;615:1;612:13;593:225;;;676:3;698:56;750:3;738:10;698:56;;;693:3;686:69;778:4;773:3;769:14;762:21;;806:4;801:3;797:14;790:21;;650:168;640:1;637;633:9;628:14;;593:225;;;597:14;246:578;;;;;;;;851:615;;966:3;959:4;951:6;947:17;943:27;936:35;933:2;;;984:1;981;974:12;933:2;1008:3;1026:78;1041:62;1096:6;1041:62;;;1026:78;;;1017:87;;1121:5;1180:6;1227:3;1219:4;1211:6;1207:17;1202:3;1198:27;1195:36;1192:2;;;1244:1;1241;1234:12;1192:2;1269:1;1254:206;1279:6;1276:1;1273:13;1254:206;;;1337:3;1359:37;1392:3;1380:10;1359:37;;;1354:3;1347:50;1420:4;1415:3;1411:14;1404:21;;1448:4;1443:3;1439:14;1432:21;;1311:149;1301:1;1298;1294:9;1289:14;;1254:206;;;1258:14;926:540;;;;;;;;1493:607;;1604:3;1597:4;1589:6;1585:17;1581:27;1574:35;1571:2;;;1622:1;1619;1612:12;1571:2;1646:3;1664:74;1679:58;1730:6;1679:58;;;1664:74;;;1655:83;;1755:5;1814:6;1861:3;1853:4;1845:6;1841:17;1836:3;1832:27;1829:36;1826:2;;;1878:1;1875;1868:12;1826:2;1903:1;1888:206;1913:6;1910:1;1907:13;1888:206;;;1971:3;1993:37;2026:3;2014:10;1993:37;;;1988:3;1981:50;2054:4;2049:3;2045:14;2038:21;;2082:4;2077:3;2073:14;2066:21;;1945:149;1935:1;1932;1928:9;1923:14;;1888:206;;;1892:14;1564:536;;;;;;;;2127:615;;2242:3;2235:4;2227:6;2223:17;2219:27;2212:35;2209:2;;;2260:1;2257;2250:12;2209:2;2284:3;2302:78;2317:62;2372:6;2317:62;;;2302:78;;;2293:87;;2397:5;2456:6;2503:3;2495:4;2487:6;2483:17;2478:3;2474:27;2471:36;2468:2;;;2520:1;2517;2510:12;2468:2;2545:1;2530:206;2555:6;2552:1;2549:13;2530:206;;;2613:3;2635:37;2668:3;2656:10;2635:37;;;2630:3;2623:50;2696:4;2691:3;2687:14;2680:21;;2724:4;2719:3;2715:14;2708:21;;2587:149;2577:1;2574;2570:9;2565:14;;2530:206;;;2534:14;2202:540;;;;;;;;2750:112;;2814:43;2849:6;2836:20;2814:43;;;2805:52;;2799:63;;;;;2869:116;;2944:36;2972:6;2966:13;2944:36;;;2935:45;;2929:56;;;;;2992:118;;3059:46;3097:6;3084:20;3059:46;;;3050:55;;3044:66;;;;;3117:116;;3183:45;3220:6;3207:20;3183:45;;;3174:54;;3168:65;;;;;3240:120;;3317:38;3347:6;3341:13;3317:38;;;3308:47;;3302:58;;;;;3368:440;;3469:3;3462:4;3454:6;3450:17;3446:27;3439:35;3436:2;;;3487:1;3484;3477:12;3436:2;3524:6;3511:20;3546:64;3561:48;3602:6;3561:48;;;3546:64;;;3537:73;;3630:6;3623:5;3616:21;3666:4;3658:6;3654:17;3699:4;3692:5;3688:16;3734:3;3725:6;3720:3;3716:16;3713:25;3710:2;;;3751:1;3748;3741:12;3710:2;3761:41;3795:6;3790:3;3785;3761:41;;;3429:379;;;;;;;;3817:442;;3919:3;3912:4;3904:6;3900:17;3896:27;3889:35;3886:2;;;3937:1;3934;3927:12;3886:2;3974:6;3961:20;3996:65;4011:49;4053:6;4011:49;;;3996:65;;;3987:74;;4081:6;4074:5;4067:21;4117:4;4109:6;4105:17;4150:4;4143:5;4139:16;4185:3;4176:6;4171:3;4167:16;4164:25;4161:2;;;4202:1;4199;4192:12;4161:2;4212:41;4246:6;4241:3;4236;4212:41;;;3879:380;;;;;;;;4296:456;;4406:4;4394:9;4389:3;4385:19;4381:30;4378:2;;;4424:1;4421;4414:12;4378:2;4442:20;4457:4;4442:20;;;4433:29;;4509:1;4540:49;4585:3;4576:6;4565:9;4561:22;4540:49;;;4534:3;4527:5;4523:15;4516:74;4472:129;4648:2;4681:49;4726:3;4717:6;4706:9;4702:22;4681:49;;;4674:4;4667:5;4663:16;4656:75;4611:131;4372:380;;;;;4788:494;;4898:4;4886:9;4881:3;4877:19;4873:30;4870:2;;;4916:1;4913;4906:12;4870:2;4934:20;4949:4;4934:20;;;4925:29;;5001:1;5032:68;5096:3;5087:6;5076:9;5072:22;5032:68;;;5026:3;5019:5;5015:15;5008:93;4964:148;5159:2;5192:68;5256:3;5247:6;5236:9;5232:22;5192:68;;;5185:4;5178:5;5174:16;5167:94;5122:150;4864:418;;;;;5317:664;;5429:5;5417:9;5412:3;5408:19;5404:31;5401:2;;;5448:1;5445;5438:12;5401:2;5466:20;5481:4;5466:20;;;5457:29;;5533:1;5564:70;5630:3;5621:6;5610:9;5606:22;5564:70;;;5558:3;5551:5;5547:15;5540:95;5496:150;5693:2;5726:70;5792:3;5783:6;5772:9;5768:22;5726:70;;;5719:4;5712:5;5708:16;5701:96;5656:152;5855:3;5889:70;5955:3;5946:6;5935:9;5931:22;5889:70;;;5882:4;5875:5;5871:16;5864:96;5818:153;5395:586;;;;;5988:118;;6055:46;6093:6;6080:20;6055:46;;;6046:55;;6040:66;;;;;6113:241;;6217:2;6205:9;6196:7;6192:23;6188:32;6185:2;;;6233:1;6230;6223:12;6185:2;6268:1;6285:53;6330:7;6321:6;6310:9;6306:22;6285:53;;;6275:63;;6247:97;6179:175;;;;;6361:366;;;6482:2;6470:9;6461:7;6457:23;6453:32;6450:2;;;6498:1;6495;6488:12;6450:2;6533:1;6550:53;6595:7;6586:6;6575:9;6571:22;6550:53;;;6540:63;;6512:97;6640:2;6658:53;6703:7;6694:6;6683:9;6679:22;6658:53;;;6648:63;;6619:98;6444:283;;;;;;6734:491;;;;6872:2;6860:9;6851:7;6847:23;6843:32;6840:2;;;6888:1;6885;6878:12;6840:2;6923:1;6940:53;6985:7;6976:6;6965:9;6961:22;6940:53;;;6930:63;;6902:97;7030:2;7048:53;7093:7;7084:6;7073:9;7069:22;7048:53;;;7038:63;;7009:98;7138:2;7156:53;7201:7;7192:6;7181:9;7177:22;7156:53;;;7146:63;;7117:98;6834:391;;;;;;7232:721;;;;;7396:3;7384:9;7375:7;7371:23;7367:33;7364:2;;;7413:1;7410;7403:12;7364:2;7448:1;7465:53;7510:7;7501:6;7490:9;7486:22;7465:53;;;7455:63;;7427:97;7555:2;7573:53;7618:7;7609:6;7598:9;7594:22;7573:53;;;7563:63;;7534:98;7663:2;7681:53;7726:7;7717:6;7706:9;7702:22;7681:53;;;7671:63;;7642:98;7799:2;7788:9;7784:18;7771:32;7823:18;7815:6;7812:30;7809:2;;;7855:1;7852;7845:12;7809:2;7875:62;7929:7;7920:6;7909:9;7905:22;7875:62;;;7865:72;;7750:193;7358:595;;;;;;;;7960:360;;;8078:2;8066:9;8057:7;8053:23;8049:32;8046:2;;;8094:1;8091;8084:12;8046:2;8129:1;8146:53;8191:7;8182:6;8171:9;8167:22;8146:53;;;8136:63;;8108:97;8236:2;8254:50;8296:7;8287:6;8276:9;8272:22;8254:50;;;8244:60;;8215:95;8040:280;;;;;;8327:366;;;8448:2;8436:9;8427:7;8423:23;8419:32;8416:2;;;8464:1;8461;8454:12;8416:2;8499:1;8516:53;8561:7;8552:6;8541:9;8537:22;8516:53;;;8506:63;;8478:97;8606:2;8624:53;8669:7;8660:6;8649:9;8645:22;8624:53;;;8614:63;;8585:98;8410:283;;;;;;8700:710;;;;;8901:3;8889:9;8880:7;8876:23;8872:33;8869:2;;;8918:1;8915;8908:12;8869:2;8953:1;8970:53;9015:7;9006:6;8995:9;8991:22;8970:53;;;8960:63;;8932:97;9060:2;9078:53;9123:7;9114:6;9103:9;9099:22;9078:53;;;9068:63;;9039:98;9168:2;9186:76;9254:7;9245:6;9234:9;9230:22;9186:76;;;9176:86;;9147:121;9299:3;9318:76;9386:7;9377:6;9366:9;9362:22;9318:76;;;9308:86;;9278:122;8863:547;;;;;;;;9417:841;;;;;9683:3;9671:9;9662:7;9658:23;9654:33;9651:2;;;9700:1;9697;9690:12;9651:2;9735:1;9752:76;9820:7;9811:6;9800:9;9796:22;9752:76;;;9742:86;;9714:120;9865:2;9883:95;9970:7;9961:6;9950:9;9946:22;9883:95;;;9873:105;;9844:140;10015:3;10034:76;10102:7;10093:6;10082:9;10078:22;10034:76;;;10024:86;;9994:122;10147:3;10166:76;10234:7;10225:6;10214:9;10210:22;10166:76;;;10156:86;;10126:122;9645:613;;;;;;;;10265:235;;10366:2;10354:9;10345:7;10341:23;10337:32;10334:2;;;10382:1;10379;10372:12;10334:2;10417:1;10434:50;10476:7;10467:6;10456:9;10452:22;10434:50;;;10424:60;;10396:94;10328:172;;;;;10507:257;;10619:2;10607:9;10598:7;10594:23;10590:32;10587:2;;;10635:1;10632;10625:12;10587:2;10670:1;10687:61;10740:7;10731:6;10720:9;10716:22;10687:61;;;10677:71;;10649:105;10581:183;;;;;10771:472;;;10902:2;10890:9;10881:7;10877:23;10873:32;10870:2;;;10918:1;10915;10908:12;10870:2;10953:1;10970:53;11015:7;11006:6;10995:9;10991:22;10970:53;;;10960:63;;10932:97;11088:2;11077:9;11073:18;11060:32;11112:18;11104:6;11101:30;11098:2;;;11144:1;11141;11134:12;11098:2;11164:63;11219:7;11210:6;11199:9;11195:22;11164:63;;;11154:73;;11039:194;10864:379;;;;;;11250:701;;;;11407:2;11395:9;11386:7;11382:23;11378:32;11375:2;;;11423:1;11420;11413:12;11375:2;11458:1;11475:53;11520:7;11511:6;11500:9;11496:22;11475:53;;;11465:63;;11437:97;11593:2;11582:9;11578:18;11565:32;11617:18;11609:6;11606:30;11603:2;;;11649:1;11646;11639:12;11603:2;11669:63;11724:7;11715:6;11704:9;11700:22;11669:63;;;11659:73;;11544:194;11797:2;11786:9;11782:18;11769:32;11821:18;11813:6;11810:30;11807:2;;;11853:1;11850;11843:12;11807:2;11873:62;11927:7;11918:6;11907:9;11903:22;11873:62;;;11863:72;;11748:193;11369:582;;;;;;11958:239;;12061:2;12049:9;12040:7;12036:23;12032:32;12029:2;;;12077:1;12074;12067:12;12029:2;12112:1;12129:52;12173:7;12164:6;12153:9;12149:22;12129:52;;;12119:62;;12091:96;12023:174;;;;;12204:261;;12318:2;12306:9;12297:7;12293:23;12289:32;12286:2;;;12334:1;12331;12324:12;12286:2;12369:1;12386:63;12441:7;12432:6;12421:9;12417:22;12386:63;;;12376:73;;12348:107;12280:185;;;;;12472:241;;12576:2;12564:9;12555:7;12551:23;12547:32;12544:2;;;12592:1;12589;12582:12;12544:2;12627:1;12644:53;12689:7;12680:6;12669:9;12665:22;12644:53;;;12634:63;;12606:97;12538:175;;;;;12720:491;;;;12858:2;12846:9;12837:7;12833:23;12829:32;12826:2;;;12874:1;12871;12864:12;12826:2;12909:1;12926:53;12971:7;12962:6;12951:9;12947:22;12926:53;;;12916:63;;12888:97;13016:2;13034:53;13079:7;13070:6;13059:9;13055:22;13034:53;;;13024:63;;12995:98;13124:2;13142:53;13187:7;13178:6;13167:9;13163:22;13142:53;;;13132:63;;13103:98;12820:391;;;;;;13219:267;;13351:95;13442:3;13435:5;13351:95;;;13475:4;13470:3;13466:14;13452:28;;13344:142;;;;;13495:171;;13581:45;13622:3;13615:5;13581:45;;;13655:4;13650:3;13646:14;13632:28;;13574:92;;;;;13675:187;;13769:53;13818:3;13811:5;13769:53;;;13851:4;13846:3;13842:14;13828:28;;13762:100;;;;;13870:142;13961:45;14000:5;13961:45;;;13956:3;13949:58;13943:69;;;14019:120;14102:31;14127:5;14102:31;;;14097:3;14090:44;14084:55;;;14185:787;14374:71;14439:5;14374:71;;;14458:121;14572:6;14567:3;14458:121;;;14451:128;;14599:73;14666:5;14599:73;;;14693:1;14678:282;14703:6;14700:1;14697:13;14678:282;;;14750:109;14855:3;14846:6;14840:13;14750:109;;;14743:116;;14876:77;14946:6;14876:77;;;14866:87;;14725:1;14722;14718:9;14713:14;;14678:282;;;14682:14;14353:619;;;;;15013:591;15146:52;15192:5;15146:52;;;15211:84;15288:6;15283:3;15211:84;;;15204:91;;15315:54;15363:5;15315:54;;;15390:1;15375:217;15400:6;15397:1;15394:13;15375:217;;;15447:63;15506:3;15497:6;15491:13;15447:63;;;15440:70;;15527:58;15578:6;15527:58;;;15517:68;;15422:1;15419;15415:9;15410:14;;15375:217;;;15379:14;15125:479;;;;;15645:635;15796:52;15842:5;15796:52;;;15861:102;15956:6;15951:3;15861:102;;;15854:109;;15983:54;16031:5;15983:54;;;16058:1;16043:225;16068:6;16065:1;16062:13;16043:225;;;16115:71;16182:3;16173:6;16167:13;16115:71;;;16108:78;;16203:58;16254:6;16203:58;;;16193:68;;16090:1;16087;16083:9;16078:14;;16043:225;;;16047:14;15775:505;;;;;16321:635;16472:52;16518:5;16472:52;;;16537:102;16632:6;16627:3;16537:102;;;16530:109;;16659:54;16707:5;16659:54;;;16734:1;16719:225;16744:6;16741:1;16738:13;16719:225;;;16791:71;16858:3;16849:6;16843:13;16791:71;;;16784:78;;16879:58;16930:6;16879:58;;;16869:68;;16766:1;16763;16759:9;16754:14;;16719:225;;;16723:14;16451:505;;;;;16997:555;17116:48;17158:5;17116:48;;;17177:74;17244:6;17239:3;17177:74;;;17170:81;;17271:50;17315:5;17271:50;;;17342:1;17327:213;17352:6;17349:1;17346:13;17327:213;;;17399:63;17458:3;17449:6;17443:13;17399:63;;;17392:70;;17479:54;17526:6;17479:54;;;17469:64;;17374:1;17371;17367:9;17362:14;;17327:213;;;17331:14;17095:457;;;;;17593:579;17720:48;17762:5;17720:48;;;17781:82;17856:6;17851:3;17781:82;;;17774:89;;17883:50;17927:5;17883:50;;;17954:1;17939:221;17964:6;17961:1;17958:13;17939:221;;;18011:71;18078:3;18069:6;18063:13;18011:71;;;18004:78;;18099:54;18146:6;18099:54;;;18089:64;;17986:1;17983;17979:9;17974:14;;17939:221;;;17943:14;17699:473;;;;;18180:111;18257:28;18279:5;18257:28;;;18252:3;18245:41;18239:52;;;18298:120;18381:31;18406:5;18381:31;;;18376:3;18369:44;18363:55;;;18425:343;;18535:38;18567:5;18535:38;;;18585:70;18648:6;18643:3;18585:70;;;18578:77;;18660:52;18705:6;18700:3;18693:4;18686:5;18682:16;18660:52;;;18733:29;18755:6;18733:29;;;18728:3;18724:39;18717:46;;18515:253;;;;;;18775:347;;18887:39;18920:5;18887:39;;;18938:71;19002:6;18997:3;18938:71;;;18931:78;;19014:52;19059:6;19054:3;19047:4;19040:5;19036:16;19014:52;;;19087:29;19109:6;19087:29;;;19082:3;19078:39;19071:46;;18867:255;;;;;;19130:364;;19290:67;19354:2;19349:3;19290:67;;;19283:74;;19390:66;19386:1;19381:3;19377:11;19370:87;19485:2;19480:3;19476:12;19469:19;;19276:218;;;;19503:364;;19663:67;19727:2;19722:3;19663:67;;;19656:74;;19763:66;19759:1;19754:3;19750:11;19743:87;19858:2;19853:3;19849:12;19842:19;;19649:218;;;;19876:566;;20036:67;20100:2;20095:3;20036:67;;;20029:74;;20136:66;20132:1;20127:3;20123:11;20116:87;20237:66;20232:2;20227:3;20223:12;20216:88;20338:66;20333:2;20328:3;20324:12;20317:88;20433:2;20428:3;20424:12;20417:19;;20022:420;;;;20451:364;;20611:67;20675:2;20670:3;20611:67;;;20604:74;;20711:66;20707:1;20702:3;20698:11;20691:87;20806:2;20801:3;20797:12;20790:19;;20597:218;;;;20824:364;;20984:67;21048:2;21043:3;20984:67;;;20977:74;;21084:66;21080:1;21075:3;21071:11;21064:87;21179:2;21174:3;21170:12;21163:19;;20970:218;;;;21197:364;;21357:67;21421:2;21416:3;21357:67;;;21350:74;;21457:66;21453:1;21448:3;21444:11;21437:87;21552:2;21547:3;21543:12;21536:19;;21343:218;;;;21570:364;;21730:67;21794:2;21789:3;21730:67;;;21723:74;;21830:66;21826:1;21821:3;21817:11;21810:87;21925:2;21920:3;21916:12;21909:19;;21716:218;;;;21943:465;;22103:67;22167:2;22162:3;22103:67;;;22096:74;;22203:66;22199:1;22194:3;22190:11;22183:87;22304:66;22299:2;22294:3;22290:12;22283:88;22399:2;22394:3;22390:12;22383:19;;22089:319;;;;22471:450;22600:4;22595:3;22591:14;22679:3;22672:5;22668:15;22662:22;22690:61;22746:3;22741;22737:13;22724:11;22690:61;;;22620:137;22826:4;22819:5;22815:16;22809:23;22838:62;22894:4;22889:3;22885:14;22872:11;22838:62;;;22767:139;22573:348;;;;22983:534;23112:4;23107:3;23103:14;23191:3;23184:5;23180:15;23174:22;23202:103;23300:3;23295;23291:13;23278:11;23202:103;;;23132:179;23380:4;23373:5;23369:16;23363:23;23392:104;23490:4;23485:3;23481:14;23468:11;23392:104;;;23321:181;23085:432;;;;23577:748;23716:5;23711:3;23707:15;23796:3;23789:5;23785:15;23779:22;23807:107;23909:3;23904;23900:13;23887:11;23807:107;;;23737:183;23989:4;23982:5;23978:16;23972:23;24001:108;24103:4;24098:3;24094:14;24081:11;24001:108;;;23930:185;24184:4;24177:5;24173:16;24167:23;24196:108;24298:4;24293:3;24289:14;24276:11;24196:108;;;24125:185;23689:636;;;;24332:110;24405:31;24430:5;24405:31;;;24400:3;24393:44;24387:55;;;24449:120;24532:31;24557:5;24532:31;;;24527:3;24520:44;24514:55;;;24576:118;24657:31;24682:5;24657:31;;;24652:3;24645:44;24639:55;;;24701:1106;;25126:121;25243:3;25234:6;25126:121;;;25269:2;25264:3;25260:12;25253:19;;25283:159;25438:3;25429:6;25283:159;;;25464:3;25459;25455:13;25448:20;;25479:121;25596:3;25587:6;25479:121;;;25622:2;25617:3;25613:12;25606:19;;25636:121;25753:3;25744:6;25636:121;;;25779:2;25774:3;25770:12;25763:19;;25799:3;25792:10;;25114:693;;;;;;;;25814:213;;25932:2;25921:9;25917:18;25909:26;;25946:71;26014:1;26003:9;25999:17;25990:6;25946:71;;;25903:124;;;;;26034:229;;26160:2;26149:9;26145:18;26137:26;;26174:79;26250:1;26239:9;26235:17;26226:6;26174:79;;;26131:132;;;;;26270:647;;26498:3;26487:9;26483:19;26475:27;;26513:79;26589:1;26578:9;26574:17;26565:6;26513:79;;;26603:72;26671:2;26660:9;26656:18;26647:6;26603:72;;;26686;26754:2;26743:9;26739:18;26730:6;26686:72;;;26806:9;26800:4;26796:20;26791:2;26780:9;26776:18;26769:48;26831:76;26902:4;26893:6;26831:76;;;26823:84;;26469:448;;;;;;;;26924:324;;27070:2;27059:9;27055:18;27047:26;;27084:71;27152:1;27141:9;27137:17;27128:6;27084:71;;;27166:72;27234:2;27223:9;27219:18;27210:6;27166:72;;;27041:207;;;;;;27255:201;;27367:2;27356:9;27352:18;27344:26;;27381:65;27443:1;27432:9;27428:17;27419:6;27381:65;;;27338:118;;;;;27463:213;;27581:2;27570:9;27566:18;27558:26;;27595:71;27663:1;27652:9;27648:17;27639:6;27595:71;;;27552:124;;;;;27683:301;;27821:2;27810:9;27806:18;27798:26;;27871:9;27865:4;27861:20;27857:1;27846:9;27842:17;27835:47;27896:78;27969:4;27960:6;27896:78;;;27888:86;;27792:192;;;;;27991:407;;28182:2;28171:9;28167:18;28159:26;;28232:9;28226:4;28222:20;28218:1;28207:9;28203:17;28196:47;28257:131;28383:4;28257:131;;;28249:139;;28153:245;;;;28405:407;;28596:2;28585:9;28581:18;28573:26;;28646:9;28640:4;28636:20;28632:1;28621:9;28617:17;28610:47;28671:131;28797:4;28671:131;;;28663:139;;28567:245;;;;28819:407;;29010:2;28999:9;28995:18;28987:26;;29060:9;29054:4;29050:20;29046:1;29035:9;29031:17;29024:47;29085:131;29211:4;29085:131;;;29077:139;;28981:245;;;;29233:407;;29424:2;29413:9;29409:18;29401:26;;29474:9;29468:4;29464:20;29460:1;29449:9;29445:17;29438:47;29499:131;29625:4;29499:131;;;29491:139;;29395:245;;;;29647:407;;29838:2;29827:9;29823:18;29815:26;;29888:9;29882:4;29878:20;29874:1;29863:9;29859:17;29852:47;29913:131;30039:4;29913:131;;;29905:139;;29809:245;;;;30061:407;;30252:2;30241:9;30237:18;30229:26;;30302:9;30296:4;30292:20;30288:1;30277:9;30273:17;30266:47;30327:131;30453:4;30327:131;;;30319:139;;30223:245;;;;30475:407;;30666:2;30655:9;30651:18;30643:26;;30716:9;30710:4;30706:20;30702:1;30691:9;30687:17;30680:47;30741:131;30867:4;30741:131;;;30733:139;;30637:245;;;;30889:407;;31080:2;31069:9;31065:18;31057:26;;31130:9;31124:4;31120:20;31116:1;31105:9;31101:17;31094:47;31155:131;31281:4;31155:131;;;31147:139;;31051:245;;;;31303:510;;31541:3;31530:9;31526:19;31518:27;;31556:117;31670:1;31659:9;31655:17;31646:6;31556:117;;;31684:119;31798:3;31787:9;31783:19;31774:6;31684:119;;;31512:301;;;;;;31820:213;;31938:2;31927:9;31923:18;31915:26;;31952:71;32020:1;32009:9;32005:17;31996:6;31952:71;;;31909:124;;;;;32040:435;;32214:2;32203:9;32199:18;32191:26;;32228:71;32296:1;32285:9;32281:17;32272:6;32228:71;;;32310:72;32378:2;32367:9;32363:18;32354:6;32310:72;;;32393;32461:2;32450:9;32446:18;32437:6;32393:72;;;32185:290;;;;;;;32482:256;;32544:2;32538:9;32528:19;;32582:4;32574:6;32570:17;32681:6;32669:10;32666:22;32645:18;32633:10;32630:34;32627:62;32624:2;;;32702:1;32699;32692:12;32624:2;32722:10;32718:2;32711:22;32522:216;;;;;32745:252;;32921:18;32913:6;32910:30;32907:2;;;32953:1;32950;32943:12;32907:2;32982:4;32974:6;32970:17;32962:25;;32844:153;;;;33004:233;;33161:18;33153:6;33150:30;33147:2;;;33193:1;33190;33183:12;33147:2;33222:4;33214:6;33210:17;33202:25;;33084:153;;;;33244:229;;33397:18;33389:6;33386:30;33383:2;;;33429:1;33426;33419:12;33383:2;33458:4;33450:6;33446:17;33438:25;;33320:153;;;;33480:233;;33637:18;33629:6;33626:30;33623:2;;;33669:1;33666;33659:12;33623:2;33698:4;33690:6;33686:17;33678:25;;33560:153;;;;33720:258;;33863:18;33855:6;33852:30;33849:2;;;33895:1;33892;33885:12;33849:2;33939:4;33935:9;33928:4;33920:6;33916:17;33912:33;33904:41;;33968:4;33962;33958:15;33950:23;;33786:192;;;;33985:259;;34129:18;34121:6;34118:30;34115:2;;;34161:1;34158;34151:12;34115:2;34205:4;34201:9;34194:4;34186:6;34182:17;34178:33;34170:41;;34234:4;34228;34224:15;34216:23;;34052:192;;;;34253:127;;34367:6;34356:17;;34348:32;;;;34391:108;;34486:6;34475:17;;34467:32;;;;34510:104;;34601:6;34590:17;;34582:32;;;;34625:108;;34720:6;34709:17;;34701:32;;;;34742:115;;34849:3;34839:13;;34833:24;;;;34864:96;;34952:3;34942:13;;34936:24;;;;34967:92;;35051:3;35041:13;;35035:24;;;;35066:96;;35154:3;35144:13;;35138:24;;;;35169:91;;35249:5;35243:12;35233:22;;35227:33;;;;35267:92;;35348:5;35342:12;35332:22;;35326:33;;;;35367:139;;35495:4;35487:6;35483:17;35472:28;;35465:41;;;;35515:120;;35624:4;35616:6;35612:17;35601:28;;35594:41;;;;35644:116;;35749:4;35741:6;35737:17;35726:28;;35719:41;;;;35769:120;;35878:4;35870:6;35866:17;35855:28;;35848:41;;;;35898:177;;36066:3;36051:18;;36044:31;;;;;36084:140;;36215:3;36200:18;;36193:31;;;;;36233:158;;36382:3;36367:18;;36360:31;;;;;36400:130;;36521:3;36506:18;;36499:31;;;;;36539:138;;36668:3;36653:18;;36646:31;;;;;36686:158;;36835:3;36820:18;;36813:31;;;;;36853:162;;36967:6;36962:3;36955:19;37004:4;36999:3;36995:14;36980:29;;36948:67;;;;;37024:163;;37139:6;37134:3;37127:19;37176:4;37171:3;37167:14;37152:29;;37120:67;;;;;37195:105;;37264:31;37289:5;37264:31;;;37253:42;;37247:53;;;;37307:92;;37387:5;37380:13;37373:21;37362:32;;37356:43;;;;37406:79;;37475:5;37464:16;;37458:27;;;;37492:128;;37572:42;37565:5;37561:54;37550:65;;37544:76;;;;37627:79;;37696:5;37685:16;;37679:27;;;;37713:105;;37782:31;37807:5;37782:31;;;37771:42;;37765:53;;;;37825:92;;37905:5;37898:13;37891:21;37880:32;;37874:43;;;;37924:79;;37993:5;37982:16;;37976:27;;;;38010:151;;38089:66;38082:5;38078:78;38067:89;;38061:100;;;;38168:128;;38248:42;38241:5;38237:54;38226:65;;38220:76;;;;38303:79;;38372:5;38361:16;;38355:27;;;;38389:129;;38476:37;38507:5;38476:37;;;38463:50;;38457:61;;;;38525:121;;38604:37;38635:5;38604:37;;;38591:50;;38585:61;;;;38653:115;;38732:31;38757:5;38732:31;;;38719:44;;38713:55;;;;38776:145;38857:6;38852:3;38847;38834:30;38913:1;38904:6;38899:3;38895:16;38888:27;38827:94;;;;38930:268;38995:1;39002:101;39016:6;39013:1;39010:13;39002:101;;;39092:1;39087:3;39083:11;39077:18;39073:1;39068:3;39064:11;39057:39;39038:2;39035:1;39031:10;39026:15;;39002:101;;;39118:6;39115:1;39112:13;39109:2;;;39183:1;39174:6;39169:3;39165:16;39158:27;39109:2;38979:219;;;;;39206:97;;39294:2;39290:7;39285:2;39278:5;39274:14;39270:28;39260:38;;39254:49;;;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC721Mintable.sol\";\nimport \"./SquareVerifier.sol\";\n\n\n//define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is CustomERC721Token {\n    //define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n    Verifier private squareVerifier;\n\n    constructor (address verifierAddress) CustomERC721Token(\"PTOK\", \"SYM\") public {\n        squareVerifier = Verifier(verifierAddress);\n    }\n\n    //define a solutions struct that can hold an index & an address\n    struct Solution{\n        uint256 index;\n        address to;\n    }\n\n    //define an array of the above struct\n    Solution[] solutions;\n\n    //define a mapping to store unique solutions submitted\n    mapping(bytes32 => Solution) solutionsMapping;\n\n    //Create an event to emit when a solution is added\n    event SolutionAdded(uint256 index, address to, bytes32 key);\n\n    //Create a function to add the solutions to the array and emit the event\n    function addSolution(uint256 index, address to, bytes32 key) public {\n        Solution memory solution = Solution(index, to);\n        solutions.push(solution);\n        solutionsMapping[key] = solution;\n        emit SolutionAdded(index, to, key );\n    }\n\n    //Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n    function mintToken(address to, uint256 tokenId,\n        Verifier.Proof memory proof, uint[1] memory inputs)\n    public\n    {\n        bytes32 soluitonKey = generateKey([proof.a.X, proof.a.Y], [proof.b.X, proof.b.Y], [proof.c.X, proof.c.Y], inputs);\n        require(solutionsMapping[soluitonKey].to == address(0));//make sure the solution is unique (has not been used before)\n        require(squareVerifier.verifyTx(proof,inputs));\n        addSolution(tokenId, to, soluitonKey);\n        mint(to, tokenId);\n    }\n\n    //Generate an unique key per solution\n    function generateKey(uint[2] memory a,\n        uint[2][2] memory b, uint[2] memory c,\n        uint[1] memory inputs) pure public returns(bytes32) {\n        return keccak256(abi.encodePacked(a, b, c, inputs));\n    }\n\n}\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "/Users/waghmarerajkumar/projects/udacity-bc-nanodegree/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/Users/waghmarerajkumar/projects/udacity-bc-nanodegree/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7655
      ]
    },
    "id": 7656,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7471,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "id": 7472,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:3"
      },
      {
        "absolutePath": "/Users/waghmarerajkumar/projects/udacity-bc-nanodegree/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7473,
        "nodeType": "ImportDirective",
        "scope": 7656,
        "sourceUnit": 1145,
        "src": "68:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/waghmarerajkumar/projects/udacity-bc-nanodegree/Blockchain-Capstone/eth-contracts/contracts/SquareVerifier.sol",
        "file": "./SquareVerifier.sol",
        "id": 7474,
        "nodeType": "ImportDirective",
        "scope": 7656,
        "sourceUnit": 8562,
        "src": "99:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7475,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1144,
              "src": "259:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1144",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7476,
            "nodeType": "InheritanceSpecifier",
            "src": "259:17:3"
          }
        ],
        "contractDependencies": [
          148,
          77,
          989,
          1098,
          1144,
          691,
          194,
          7469
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7655,
        "linearizedBaseContracts": [
          7655,
          1144,
          1098,
          7469,
          989,
          691,
          194,
          148,
          77
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7478,
            "name": "squareVerifier",
            "nodeType": "VariableDeclaration",
            "scope": 7655,
            "src": "388:31:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8561",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7477,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8561,
              "src": "388:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8561",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 7493,
              "nodeType": "Block",
              "src": "504:59:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7487,
                      "name": "squareVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7478,
                      "src": "514:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8561",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7489,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7480,
                          "src": "540:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7488,
                        "name": "Verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8561,
                        "src": "531:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Verifier_$8561_$",
                          "typeString": "type(contract Verifier)"
                        }
                      },
                      "id": 7490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "531:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8561",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "514:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$8561",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7492,
                  "nodeType": "ExpressionStatement",
                  "src": "514:42:3"
                }
              ]
            },
            "documentation": null,
            "id": 7494,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "50544f4b",
                    "id": 7483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "482:6:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c56ce851fc0571fc58dc6d22d216324be79d2ee61fe3751bb5c3c0bc50c76e76",
                      "typeString": "literal_string \"PTOK\""
                    },
                    "value": "PTOK"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "53594d",
                    "id": 7484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "490:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4d3015a52e62e7dc6887dd6869969b57532cf58982b1264ed2b19809b668f8e5",
                      "typeString": "literal_string \"SYM\""
                    },
                    "value": "SYM"
                  }
                ],
                "id": 7485,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7482,
                  "name": "CustomERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1144,
                  "src": "464:17:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CustomERC721Token_$1144_$",
                    "typeString": "type(contract CustomERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "464:32:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7480,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7494,
                  "src": "439:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "439:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "438:25:3"
            },
            "returnParameters": {
              "id": 7486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "504:0:3"
            },
            "scope": 7655,
            "src": "426:137:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7499,
            "members": [
              {
                "constant": false,
                "id": 7496,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7499,
                "src": "662:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7495,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "662:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7498,
                "name": "to",
                "nodeType": "VariableDeclaration",
                "scope": 7499,
                "src": "685:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7497,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "685:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7655,
            "src": "637:65:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7502,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7655,
            "src": "750:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7499_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7500,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7499,
                "src": "750:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7499_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7501,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "750:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7499_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7506,
            "name": "solutionsMapping",
            "nodeType": "VariableDeclaration",
            "scope": 7655,
            "src": "836:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7499_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7505,
              "keyType": {
                "id": 7503,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "844:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "836:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7499_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7504,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7499,
                "src": "855:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7499_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7514,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7508,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "963:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7507,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "963:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7510,
                  "indexed": false,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "978:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7512,
                  "indexed": false,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "990:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7511,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "962:40:3"
            },
            "src": "943:60:3"
          },
          {
            "body": {
              "id": 7548,
              "nodeType": "Block",
              "src": "1154:184:3",
              "statements": [
                {
                  "assignments": [
                    7524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7524,
                      "name": "solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7548,
                      "src": "1164:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7499_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7523,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7499,
                        "src": "1164:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7499_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7529,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7526,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7516,
                        "src": "1200:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7527,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7518,
                        "src": "1207:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7525,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7499,
                      "src": "1191:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7499_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1191:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7499_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1164:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7533,
                        "name": "solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7524,
                        "src": "1235:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7499_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7499_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7530,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7502,
                        "src": "1220:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7499_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1220:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7499_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7535,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:24:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7536,
                        "name": "solutionsMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7506,
                        "src": "1254:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7499_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7538,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7537,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7520,
                        "src": "1271:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1254:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7499_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7539,
                      "name": "solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7524,
                      "src": "1278:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7499_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1254:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7499_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7541,
                  "nodeType": "ExpressionStatement",
                  "src": "1254:32:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7543,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7516,
                        "src": "1315:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7544,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7518,
                        "src": "1322:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7545,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7520,
                        "src": "1326:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7542,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7514,
                      "src": "1301:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,address,bytes32)"
                      }
                    },
                    "id": 7546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1301:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7547,
                  "nodeType": "EmitStatement",
                  "src": "1296:35:3"
                }
              ]
            },
            "documentation": null,
            "id": 7549,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7516,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7549,
                  "src": "1107:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7518,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7549,
                  "src": "1122:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1122:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7520,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7549,
                  "src": "1134:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7519,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1134:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1106:40:3"
            },
            "returnParameters": {
              "id": 7522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1154:0:3"
            },
            "scope": 7655,
            "src": "1086:252:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7619,
              "nodeType": "Block",
              "src": "1682:386:3",
              "statements": [
                {
                  "assignments": [
                    7563
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7563,
                      "name": "soluitonKey",
                      "nodeType": "VariableDeclaration",
                      "scope": 7619,
                      "src": "1692:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7562,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1692:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7588,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7565,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7555,
                                "src": "1727:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8251_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7566,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8246,
                              "src": "1727:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7663_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7567,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7660,
                            "src": "1727:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7568,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7555,
                                "src": "1738:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8251_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7569,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8246,
                              "src": "1738:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7663_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7570,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7662,
                            "src": "1738:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 7571,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1726:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7572,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7555,
                                "src": "1751:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8251_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7573,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8248,
                              "src": "1751:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$7672_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7574,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7667,
                            "src": "1751:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7575,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7555,
                                "src": "1762:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8251_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7576,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8248,
                              "src": "1762:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$7672_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7577,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7671,
                            "src": "1762:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "id": 7578,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1750:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7579,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7555,
                                "src": "1775:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8251_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7580,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8250,
                              "src": "1775:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7663_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7581,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7660,
                            "src": "1775:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7582,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7555,
                                "src": "1786:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8251_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7583,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8250,
                              "src": "1786:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7663_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7584,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7662,
                            "src": "1786:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 7585,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1774:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7586,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7559,
                        "src": "1798:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                          "typeString": "uint256[1] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                          "typeString": "uint256[1] memory"
                        }
                      ],
                      "id": 7564,
                      "name": "generateKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7654,
                      "src": "1714:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$1_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[1] memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1714:91:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1692:113:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7590,
                              "name": "solutionsMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7506,
                              "src": "1823:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7499_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7592,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7591,
                              "name": "soluitonKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7563,
                              "src": "1840:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1823:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7499_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7593,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "to",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7498,
                          "src": "1823:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1867:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1859:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1859:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1823:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8906,
                        8907
                      ],
                      "referencedDeclaration": 8906,
                      "src": "1815:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1815:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7599,
                  "nodeType": "ExpressionStatement",
                  "src": "1815:55:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7603,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7555,
                            "src": "1973:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$8251_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7604,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7559,
                            "src": "1979:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                              "typeString": "uint256[1] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$8251_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                              "typeString": "uint256[1] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7601,
                            "name": "squareVerifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7478,
                            "src": "1949:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Verifier_$8561",
                              "typeString": "contract Verifier"
                            }
                          },
                          "id": 7602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyTx",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8560,
                          "src": "1949:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Proof_$8251_memory_ptr_$_t_array$_t_uint256_$1_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Verifier.Proof memory,uint256[1] memory) view external returns (bool)"
                          }
                        },
                        "id": 7605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1949:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8906,
                        8907
                      ],
                      "referencedDeclaration": 8906,
                      "src": "1941:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1941:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7607,
                  "nodeType": "ExpressionStatement",
                  "src": "1941:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7609,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7553,
                        "src": "2009:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7610,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7551,
                        "src": "2018:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7611,
                        "name": "soluitonKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7563,
                        "src": "2022:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7608,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7549,
                      "src": "1997:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,address,bytes32)"
                      }
                    },
                    "id": 7612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1997:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7613,
                  "nodeType": "ExpressionStatement",
                  "src": "1997:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7615,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7551,
                        "src": "2049:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7616,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7553,
                        "src": "2053:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7614,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1143,
                      "src": "2044:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2044:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7618,
                  "nodeType": "ExpressionStatement",
                  "src": "2044:17:3"
                }
              ]
            },
            "documentation": null,
            "id": 7620,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7551,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7620,
                  "src": "1578:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1578:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7553,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7620,
                  "src": "1590:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7552,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7555,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7620,
                  "src": "1615:27:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8251_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7554,
                    "name": "Verifier.Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8251,
                    "src": "1615:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$8251_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7559,
                  "name": "inputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 7620,
                  "src": "1644:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                    "typeString": "uint256[1]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7556,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1644:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7558,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 7557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1649:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1644:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$1_storage_ptr",
                      "typeString": "uint256[1]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1577:89:3"
            },
            "returnParameters": {
              "id": 7561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1682:0:3"
            },
            "scope": 7655,
            "src": "1559:509:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7653,
              "nodeType": "Block",
              "src": "2262:68:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7646,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7624,
                            "src": "2306:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7647,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7630,
                            "src": "2309:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7648,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7634,
                            "src": "2312:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7649,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7638,
                            "src": "2315:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                              "typeString": "uint256[1] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                              "typeString": "uint256[1] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7644,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8890,
                            "src": "2289:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2289:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2289:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7643,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8897,
                      "src": "2279:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2279:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 7642,
                  "id": 7652,
                  "nodeType": "Return",
                  "src": "2272:51:3"
                }
              ]
            },
            "documentation": null,
            "id": 7654,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7624,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7654,
                  "src": "2137:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7621,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2137:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7623,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2142:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2137:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7630,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7654,
                  "src": "2163:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7625,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2163:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7627,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2168:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "2163:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7629,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2171:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2163:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7634,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7654,
                  "src": "2184:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7631,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2184:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7633,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2189:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2184:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7638,
                  "name": "inputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 7654,
                  "src": "2210:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                    "typeString": "uint256[1]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7635,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2210:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7637,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 7636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2215:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2210:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$1_storage_ptr",
                      "typeString": "uint256[1]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2136:96:3"
            },
            "returnParameters": {
              "id": 7642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7641,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7654,
                  "src": "2253:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7640,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2253:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2252:9:3"
            },
            "scope": 7655,
            "src": "2116:214:3",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7656,
        "src": "228:2105:3"
      }
    ],
    "src": "0:2369:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/waghmarerajkumar/projects/udacity-bc-nanodegree/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7655
      ]
    },
    "id": 7656,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7471,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "id": 7472,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:3"
      },
      {
        "absolutePath": "/Users/waghmarerajkumar/projects/udacity-bc-nanodegree/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7473,
        "nodeType": "ImportDirective",
        "scope": 7656,
        "sourceUnit": 1145,
        "src": "68:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/waghmarerajkumar/projects/udacity-bc-nanodegree/Blockchain-Capstone/eth-contracts/contracts/SquareVerifier.sol",
        "file": "./SquareVerifier.sol",
        "id": 7474,
        "nodeType": "ImportDirective",
        "scope": 7656,
        "sourceUnit": 8562,
        "src": "99:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7475,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1144,
              "src": "259:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1144",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7476,
            "nodeType": "InheritanceSpecifier",
            "src": "259:17:3"
          }
        ],
        "contractDependencies": [
          148,
          77,
          989,
          1098,
          1144,
          691,
          194,
          7469
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7655,
        "linearizedBaseContracts": [
          7655,
          1144,
          1098,
          7469,
          989,
          691,
          194,
          148,
          77
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7478,
            "name": "squareVerifier",
            "nodeType": "VariableDeclaration",
            "scope": 7655,
            "src": "388:31:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8561",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7477,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8561,
              "src": "388:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8561",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 7493,
              "nodeType": "Block",
              "src": "504:59:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7487,
                      "name": "squareVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7478,
                      "src": "514:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8561",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7489,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7480,
                          "src": "540:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7488,
                        "name": "Verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8561,
                        "src": "531:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Verifier_$8561_$",
                          "typeString": "type(contract Verifier)"
                        }
                      },
                      "id": 7490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "531:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8561",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "514:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$8561",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7492,
                  "nodeType": "ExpressionStatement",
                  "src": "514:42:3"
                }
              ]
            },
            "documentation": null,
            "id": 7494,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "50544f4b",
                    "id": 7483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "482:6:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c56ce851fc0571fc58dc6d22d216324be79d2ee61fe3751bb5c3c0bc50c76e76",
                      "typeString": "literal_string \"PTOK\""
                    },
                    "value": "PTOK"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "53594d",
                    "id": 7484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "490:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4d3015a52e62e7dc6887dd6869969b57532cf58982b1264ed2b19809b668f8e5",
                      "typeString": "literal_string \"SYM\""
                    },
                    "value": "SYM"
                  }
                ],
                "id": 7485,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7482,
                  "name": "CustomERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1144,
                  "src": "464:17:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CustomERC721Token_$1144_$",
                    "typeString": "type(contract CustomERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "464:32:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7480,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7494,
                  "src": "439:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "439:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "438:25:3"
            },
            "returnParameters": {
              "id": 7486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "504:0:3"
            },
            "scope": 7655,
            "src": "426:137:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7499,
            "members": [
              {
                "constant": false,
                "id": 7496,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7499,
                "src": "662:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7495,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "662:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7498,
                "name": "to",
                "nodeType": "VariableDeclaration",
                "scope": 7499,
                "src": "685:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7497,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "685:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7655,
            "src": "637:65:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7502,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7655,
            "src": "750:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7499_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7500,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7499,
                "src": "750:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7499_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7501,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "750:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7499_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7506,
            "name": "solutionsMapping",
            "nodeType": "VariableDeclaration",
            "scope": 7655,
            "src": "836:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7499_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7505,
              "keyType": {
                "id": 7503,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "844:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "836:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7499_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7504,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7499,
                "src": "855:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7499_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7514,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7508,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "963:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7507,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "963:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7510,
                  "indexed": false,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "978:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7512,
                  "indexed": false,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7514,
                  "src": "990:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7511,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "962:40:3"
            },
            "src": "943:60:3"
          },
          {
            "body": {
              "id": 7548,
              "nodeType": "Block",
              "src": "1154:184:3",
              "statements": [
                {
                  "assignments": [
                    7524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7524,
                      "name": "solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7548,
                      "src": "1164:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7499_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7523,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7499,
                        "src": "1164:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7499_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7529,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7526,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7516,
                        "src": "1200:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7527,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7518,
                        "src": "1207:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7525,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7499,
                      "src": "1191:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7499_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1191:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7499_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1164:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7533,
                        "name": "solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7524,
                        "src": "1235:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7499_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7499_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7530,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7502,
                        "src": "1220:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7499_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1220:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7499_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7535,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:24:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7536,
                        "name": "solutionsMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7506,
                        "src": "1254:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7499_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7538,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7537,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7520,
                        "src": "1271:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1254:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7499_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7539,
                      "name": "solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7524,
                      "src": "1278:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7499_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1254:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7499_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7541,
                  "nodeType": "ExpressionStatement",
                  "src": "1254:32:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7543,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7516,
                        "src": "1315:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7544,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7518,
                        "src": "1322:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7545,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7520,
                        "src": "1326:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7542,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7514,
                      "src": "1301:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,address,bytes32)"
                      }
                    },
                    "id": 7546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1301:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7547,
                  "nodeType": "EmitStatement",
                  "src": "1296:35:3"
                }
              ]
            },
            "documentation": null,
            "id": 7549,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7516,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7549,
                  "src": "1107:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7518,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7549,
                  "src": "1122:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1122:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7520,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7549,
                  "src": "1134:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7519,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1134:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1106:40:3"
            },
            "returnParameters": {
              "id": 7522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1154:0:3"
            },
            "scope": 7655,
            "src": "1086:252:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7619,
              "nodeType": "Block",
              "src": "1682:386:3",
              "statements": [
                {
                  "assignments": [
                    7563
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7563,
                      "name": "soluitonKey",
                      "nodeType": "VariableDeclaration",
                      "scope": 7619,
                      "src": "1692:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7562,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1692:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7588,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7565,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7555,
                                "src": "1727:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8251_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7566,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8246,
                              "src": "1727:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7663_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7567,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7660,
                            "src": "1727:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7568,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7555,
                                "src": "1738:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8251_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7569,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8246,
                              "src": "1738:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7663_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7570,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7662,
                            "src": "1738:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 7571,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1726:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7572,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7555,
                                "src": "1751:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8251_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7573,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8248,
                              "src": "1751:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$7672_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7574,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7667,
                            "src": "1751:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7575,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7555,
                                "src": "1762:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8251_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7576,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8248,
                              "src": "1762:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$7672_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7577,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7671,
                            "src": "1762:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "id": 7578,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1750:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7579,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7555,
                                "src": "1775:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8251_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7580,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8250,
                              "src": "1775:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7663_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7581,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7660,
                            "src": "1775:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7582,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7555,
                                "src": "1786:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8251_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7583,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8250,
                              "src": "1786:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7663_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7584,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7662,
                            "src": "1786:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 7585,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1774:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7586,
                        "name": "inputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7559,
                        "src": "1798:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                          "typeString": "uint256[1] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                          "typeString": "uint256[1] memory"
                        }
                      ],
                      "id": 7564,
                      "name": "generateKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7654,
                      "src": "1714:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$1_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[1] memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1714:91:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1692:113:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7590,
                              "name": "solutionsMapping",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7506,
                              "src": "1823:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7499_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7592,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7591,
                              "name": "soluitonKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7563,
                              "src": "1840:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1823:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7499_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7593,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "to",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7498,
                          "src": "1823:32:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1867:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1859:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1859:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1823:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8906,
                        8907
                      ],
                      "referencedDeclaration": 8906,
                      "src": "1815:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1815:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7599,
                  "nodeType": "ExpressionStatement",
                  "src": "1815:55:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7603,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7555,
                            "src": "1973:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$8251_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7604,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7559,
                            "src": "1979:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                              "typeString": "uint256[1] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$8251_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                              "typeString": "uint256[1] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7601,
                            "name": "squareVerifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7478,
                            "src": "1949:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Verifier_$8561",
                              "typeString": "contract Verifier"
                            }
                          },
                          "id": 7602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyTx",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8560,
                          "src": "1949:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Proof_$8251_memory_ptr_$_t_array$_t_uint256_$1_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Verifier.Proof memory,uint256[1] memory) view external returns (bool)"
                          }
                        },
                        "id": 7605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1949:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8906,
                        8907
                      ],
                      "referencedDeclaration": 8906,
                      "src": "1941:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1941:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7607,
                  "nodeType": "ExpressionStatement",
                  "src": "1941:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7609,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7553,
                        "src": "2009:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7610,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7551,
                        "src": "2018:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7611,
                        "name": "soluitonKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7563,
                        "src": "2022:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7608,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7549,
                      "src": "1997:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,address,bytes32)"
                      }
                    },
                    "id": 7612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1997:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7613,
                  "nodeType": "ExpressionStatement",
                  "src": "1997:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7615,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7551,
                        "src": "2049:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7616,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7553,
                        "src": "2053:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7614,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1143,
                      "src": "2044:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2044:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7618,
                  "nodeType": "ExpressionStatement",
                  "src": "2044:17:3"
                }
              ]
            },
            "documentation": null,
            "id": 7620,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7551,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7620,
                  "src": "1578:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1578:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7553,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7620,
                  "src": "1590:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7552,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7555,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7620,
                  "src": "1615:27:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8251_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7554,
                    "name": "Verifier.Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8251,
                    "src": "1615:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$8251_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7559,
                  "name": "inputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 7620,
                  "src": "1644:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                    "typeString": "uint256[1]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7556,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1644:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7558,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 7557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1649:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1644:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$1_storage_ptr",
                      "typeString": "uint256[1]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1577:89:3"
            },
            "returnParameters": {
              "id": 7561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1682:0:3"
            },
            "scope": 7655,
            "src": "1559:509:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7653,
              "nodeType": "Block",
              "src": "2262:68:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7646,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7624,
                            "src": "2306:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7647,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7630,
                            "src": "2309:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7648,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7634,
                            "src": "2312:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7649,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7638,
                            "src": "2315:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                              "typeString": "uint256[1] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                              "typeString": "uint256[1] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7644,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8890,
                            "src": "2289:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2289:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2289:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7643,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8897,
                      "src": "2279:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2279:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 7642,
                  "id": 7652,
                  "nodeType": "Return",
                  "src": "2272:51:3"
                }
              ]
            },
            "documentation": null,
            "id": 7654,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7624,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7654,
                  "src": "2137:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7621,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2137:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7623,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2142:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2137:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7630,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7654,
                  "src": "2163:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7625,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2163:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7627,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2168:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "2163:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7629,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2171:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2163:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7634,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7654,
                  "src": "2184:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7631,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2184:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7633,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2189:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2184:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7638,
                  "name": "inputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 7654,
                  "src": "2210:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                    "typeString": "uint256[1]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7635,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2210:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7637,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 7636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2215:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2210:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$1_storage_ptr",
                      "typeString": "uint256[1]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2136:96:3"
            },
            "returnParameters": {
              "id": 7642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7641,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7654,
                  "src": "2253:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7640,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2253:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2252:9:3"
            },
            "scope": 7655,
            "src": "2116:214:3",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7656,
        "src": "228:2105:3"
      }
    ],
    "src": "0:2369:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.5+commit.47a71e8f.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x6bc6afc76c0b332ba90fee021156bac0d12ed376d185f1615de6e5c4774f21d3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "index",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "key",
              "type": "bytes32"
            }
          ],
          "name": "SolutionAdded",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "whoPaused",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "whoUnpaused",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        },
        "0x3511b702d5ff40e5fdc0ca67119c0c54db468b05276089de85bb310f47308de5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "to",
              "type": "address"
            }
          ],
          "name": "OwnerShipTrasnferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x835c23dcdC2265de3D40cc70209B895B8E737437",
      "transactionHash": "0xd60e537365c0441d706c7703f168780bae68d2daccd551d43b5bcf3a1c4e4be1"
    },
    "4": {
      "events": {
        "0x6bc6afc76c0b332ba90fee021156bac0d12ed376d185f1615de6e5c4774f21d3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "index",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "key",
              "type": "bytes32"
            }
          ],
          "name": "SolutionAdded",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "whoPaused",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "whoUnpaused",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        },
        "0x3511b702d5ff40e5fdc0ca67119c0c54db468b05276089de85bb310f47308de5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "to",
              "type": "address"
            }
          ],
          "name": "OwnerShipTrasnferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x7bC8ff8baF6cD09884A275eCe0ff00889263FCba",
      "transactionHash": "0x4421c553d669fe2e87a284eeb6252daf4154cb13da759551903487ccf6296ab8"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2022-08-01T14:22:52.399Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {
      "setPaused(bool)": {
        "notice": "Let owner set the paused mode."
      }
    }
  }
}